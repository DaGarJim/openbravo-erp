<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html 
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SL 
 * All portions are Copyright (C) 2001-2007 Openbravo SL 
 * All Rights Reserved. 
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->



<SqlClass name="EditionFieldsData" package="org.openbravo.wad">
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment>Names of the columns and name of the fields of a tab</SqlMethodComment>
    <Sql><![CDATA[
      SELECT ad_field.seqno, ad_column.ColumnName As columnName, ad_column.ColumnName As columnNameInp, 
      ad_field.name as Name, ismandatory as required, ad_reference_value_id as referenceValue, 
      ad_column.ad_reference_id as reference, displayLength as displaySize, 'x' as htmltext, '' as xmltext, 
      isSameLine as issameline, (CASE ad_field.isActive WHEN 'N' THEN 'N' ELSE isDisplayed END) as isdisplayed, isupdateable as isupdateable, 
      isparent, ad_column.FIELDLENGTH, (CASE WHEN (ad_column.AD_REFERENCE_ID<>30 OR AD_REFERENCE_VALUE_ID IS NULL) THEN REPLACE(REPLACE(REPLACE(ad_element.name, 'Substitute', 'Product'), 'BOM', ''), 'M_LocatorTo_ID', 'M_Locator_ID') ELSE (SELECT NAME FROM AD_REFERENCE WHERE AD_REFERENCE.AD_REFERENCE_ID=ad_column.AD_REFERENCE_VALUE_ID) END) as searchName, ad_column.ad_callout_id, 
      ad_column.ad_process_id, ad_field.isreadonly, to_char(ad_field.DISPLAYLOGIC) displaylogic, ad_field.isEncrypted, AD_FIELD.AD_FIELDGROUP_ID AS FieldGroup, ad_field.ad_tab_id as tabid, '' as ad_column_id, ad_column.ad_val_rule_id, '' as displaylength, '' as value, '' as ad_window_id, 
      AD_COLUMN.ValueMin, AD_COLUMN.ValueMax, REPLACE(REPLACE(REPLACE(REPLACE(ad_column.columnname, 'Substitute', 'M_Product'), 'C_Settlement_Cancel_ID', 'C_Settlement_ID'), 'BOM', ''), 'M_LocatorTo_ID', 'M_Locator_ID') as realName, mom.mappingname as java_class_name, '' as realcolumnname, '' as xsqltext, ad_column.isEncrypted AS isColumnEncrypted, ad_column.isDesencryptable, 
      ad_reference.name as reference_name, ad_reference.name as reference_name_trl, '' AS CLASSNAME, '' AS MAPPINGNAME, ad_callout.name as calloutname, 
      moc.classname as classname_callout, momc.mappingname as mappingname_callout, '' AS COLUMNNAME_END, ad_field.isactive 
      FROM ad_column left join ad_element on ad_column.ad_element_id = ad_element.ad_element_id
                     left join ad_process on ad_column.ad_process_id = ad_process.ad_process_id
                     left join ad_reference on ad_column.ad_reference_id = ad_reference.ad_reference_id
                     left join ad_model_object mo on ad_process.ad_process_id = mo.ad_process_id
                                                 and mo.action   = 'P' 
                                                 AND mo.isactive = 'Y' 
                                                 AND mo.isdefault= 'Y'
                     left join ad_model_object_mapping mom on mo.ad_model_object_id = mom.ad_model_object_id
                                                AND mom.isactive = 'Y' 
                                                AND mom.isdefault= 'Y'
                     left join ad_callout on ad_column.ad_callout_id = ad_callout.ad_callout_id
                     left join ad_model_object moc on ad_callout.ad_callout_id = moc.ad_callout_id
                                                AND moc.isactive = 'Y'
                                                AND moc.isdefault = 'Y' 
                                                AND moc.action = 'C'
                     left join ad_model_object_mapping momc on moc.ad_model_object_id = momc.ad_model_object_id
                                                AND momc.isactive = 'Y' 
                                                AND momc.isdefault= 'Y',
            ad_field
      WHERE ad_field.ad_column_id = ad_column.ad_column_id 
        AND ad_field.ad_tab_id = ?
        AND ad_column.isActive = 'Y'
              union 
      select (case when upper(columnname)='CREATED' then 10000 
                   when upper(columnname)='CREATEDBY' then 10001
                   when upper(columnname)='UPDATED' then 10002
                   else 10003
              end), columnname,  columnname, c.name, 'N', 
             c.ad_reference_value_id, c.ad_reference_id, 44, 'x', 
             null, 
             (case when upper(columnname) in ('CREATED', 'UPDATED') then 'N'
                   else 'Y'
               end), 'Y', 'N', 'N', c.FIELDLENGTH, c.name, null, 
             null, 'Y', '@#ShowAudit@=''Y''', 'N', 1000100001 fieldgroup, tb.ad_tab_id, null, null, null, null, null, null, null, c.columnname, 
             null, null, null, 'N', 'N', r.name, r.name, null, null, null, null, null, null, 'Y'
       from ad_column c, ad_tab tb, ad_reference r
      where c.ad_table_id = tb.ad_table_id
        and upper(columnname) in ('CREATED', 'CREATEDBY', 'UPDATED', 'UPDATEDBY')
        and tb.ad_tab_id = ?
        and r.ad_reference_id = c.ad_reference_id
      ORDER BY SEQNO
    ]]></Sql>
    <Parameter name="tab"/>
    <Parameter name="tab"/>
  </SqlMethod>

  <SqlMethod name="selectTrl" type="preparedStatement" return="multiple">
    <SqlMethodComment>Names of the columns and name of the fields of a tab</SqlMethodComment>
    <Sql><![CDATA[
      SELECT ad_field.seqno, ad_column.ColumnName As columnName, ad_column.ColumnName As columnNameInp, 
      (CASE WHEN ad_field_trl.name IS NULL THEN '*' || ad_field.name ELSE ad_field_trl.name END) as Name, ismandatory as required, ad_reference_value_id as referenceValue, 
      ad_column.ad_reference_id as reference, displayLength as displaySize, 'x' as htmltext, 
      isSameLine as issameline, (CASE ad_field.isActive WHEN 'N' THEN 'N' ELSE isDisplayed END) as isdisplayed, isupdateable as isupdateable, 
      isparent, ad_column.FIELDLENGTH, (CASE WHEN (ad_column.AD_REFERENCE_ID<>30 OR AD_REFERENCE_VALUE_ID IS NULL) THEN REPLACE(REPLACE(REPLACE(ad_element.name, 'Substitute', 'Product'), 'BOM', ''), 'M_LocatorTo_ID', 'M_Locator_ID') ELSE (SELECT NAME FROM AD_REFERENCE WHERE AD_REFERENCE.AD_REFERENCE_ID=ad_column.AD_REFERENCE_VALUE_ID) END) as searchName, ad_column.ad_callout_id, 
      ad_column.ad_process_id, ad_field.isreadonly, to_char(ad_field.DISPLAYLOGIC) displaylogic, ad_field.isEncrypted, AD_FIELD.AD_FIELDGROUP_ID AS FieldGroup,
      ad_field.ad_tab_id as tabid, AD_COLUMN.ValueMin, AD_COLUMN.ValueMax, REPLACE(REPLACE(REPLACE(REPLACE(ad_column.columnname, 'Substitute', 'M_Product'), 'C_Settlement_Cancel_ID', 'C_Settlement_ID'), 'BOM', ''), 'M_LocatorTo_ID', 'M_Locator_ID') as realName, mom.mappingname as java_class_name, ad_column.isEncrypted AS isColumnEncrypted, ad_column.isDesencryptable, 
      ad_reference.name as reference_name, ad_column.ad_val_rule_id, 
      (CASE WHEN ad_reference_trl.ad_reference_id IS NULL THEN ad_reference.name ELSE ad_reference_trl.name END) as reference_name_trl, ad_callout.name as calloutname, 
      moc.classname as classname_callout, momc.mappingname as mappingname_callout, ad_field.isactive 
      FROM ad_column left join ad_element on ad_column.ad_element_id = ad_element.ad_element_id
                     left join ad_process on ad_column.ad_process_id = ad_process.ad_process_id
                     left join ad_reference on ad_column.ad_reference_id = ad_reference.ad_reference_id
                     left join ad_reference_trl on ad_reference.ad_reference_id = ad_reference_trl.ad_reference_id 
                                               AND ad_reference_trl.ad_language = ? 
                     left join ad_model_object mo on ad_process.ad_process_id = mo.ad_process_id 
                                                  AND mo.action = 'P' 
                                                  AND mo.isactive = 'Y' 
                                                  AND mo.isdefault = 'Y'
                     left join ad_model_object_mapping mom on mo.ad_model_object_id = mom.ad_model_object_id
                                                  AND mom.isactive = 'Y' 
                                                  AND mom.isdefault = 'Y'
                     left join ad_callout on ad_column.ad_callout_id = ad_callout.ad_callout_id
                     left join ad_model_object moc on ad_callout.ad_callout_id = moc.ad_callout_id
                                                AND moc.isactive = 'Y'
                                                AND moc.isdefault = 'Y' 
                                                AND moc.action = 'C'
                     left join ad_model_object_mapping momc on moc.ad_model_object_id = momc.ad_model_object_id
                                                AND momc.isactive = 'Y' 
                                                AND momc.isdefault= 'Y',
           ad_field left join ad_field_trl on ad_field.ad_field_id = ad_field_trl.ad_field_id 
                                                  AND ad_field_trl.isactive = 'Y'
                                                  AND ad_field_trl.ad_language = ?
      WHERE ad_field.ad_column_id = ad_column.ad_column_id 
        AND ad_field.ad_tab_id = ? 
        AND ad_column.isActive = 'Y'
     union 
          SELECT (case when upper(c.columnname)='CREATED' then 10000 
                   when upper(c.columnname)='CREATEDBY' then 10001
                   when upper(c.columnname)='UPDATED' then 10002
                   else 10003
              end), c.ColumnName As columnName, c.ColumnName As columnNameInp, 
      (CASE WHEN ad_element_trl.name IS NULL THEN '*' || ad_element.name ELSE ad_element_trl.name END) as Name, ismandatory as required, ad_reference_value_id as referenceValue, 
      c.ad_reference_id as reference, 44, 'x' as htmltext, 
      (case when upper(c.columnname) in ('CREATED', 'UPDATED') then 'N'
                   else 'Y'
               end) as issameline, 'Y' as isdisplayed, 'N' as isupdateable, 
      'Y', c.FIELDLENGTH, (CASE WHEN (c.AD_REFERENCE_ID<>30 OR AD_REFERENCE_VALUE_ID IS NULL) THEN REPLACE(REPLACE(REPLACE(ad_element.name, 'Substitute', 'Product'), 'BOM', ''), 'M_LocatorTo_ID', 'M_Locator_ID') ELSE (SELECT NAME FROM AD_REFERENCE WHERE r.AD_REFERENCE_ID=c.AD_REFERENCE_VALUE_ID) END) as searchName, c.ad_callout_id, 
      c.ad_process_id, 'Y', '@#ShowAudit@=''Y''' displaylogic, 'N', 1000100001 AS FieldGroup,
      tb.ad_tab_id as tabid, c.ValueMin, c.ValueMax, REPLACE(REPLACE(REPLACE(REPLACE(c.columnname, 'Substitute', 'M_Product'), 'C_Settlement_Cancel_ID', 'C_Settlement_ID'), 'BOM', ''), 'M_LocatorTo_ID', 'M_Locator_ID') as realName,null as java_class_name, c.isEncrypted AS isColumnEncrypted, c.isDesencryptable, 
      r.name as reference_name, c.ad_val_rule_id, 
      (CASE WHEN ad_reference_trl.ad_reference_id IS NULL THEN r.name ELSE ad_reference_trl.name END) as reference_name_trl, null as calloutname, 
      null, null, 'Y' 
       from  ad_tab tb, ad_column c
                                                  left join ad_element on c.ad_element_id = ad_element.ad_element_id
                                                  left join ad_element_trl on ad_element_trl.ad_element_id = ad_element.ad_element_id
                                                  and ad_language = ?,
                                                  ad_reference r
                                                  left join ad_reference_trl on r.ad_reference_id = ad_reference_trl.ad_reference_id 
                                               AND ad_reference_trl.ad_language = ?
                                               
      where c.ad_table_id = tb.ad_table_id
        and upper(c.columnname) in ('CREATED', 'CREATEDBY', 'UPDATED', 'UPDATEDBY')
        and tb.ad_tab_id = ?
        and r.ad_reference_id = c.ad_reference_id
        ORDER BY SEQNO
    ]]></Sql>
    <Parameter name="adLanguage"/>
    <Parameter name="adLanguage"/>
    <Parameter name="tab"/>
    <Parameter name="adLanguage"/>
    <Parameter name="adLanguage"/>
    <Parameter name="tab"/>
  </SqlMethod>

  <SqlMethod name="selectAuxiliar" type="preparedStatement" return="multiple">
    <SqlMethodComment>Names of the columns and name of the fields of a tab</SqlMethodComment>
    <Sql>
      SELECT ad_auxiliarinput_id as reference, name as columnname, name as columnnameinp, code as name, '' as htmltext 
      FROM ad_auxiliarinput 
      WHERE ad_tab_id = ?
    </Sql>
    <Parameter name="tab"/>
  </SqlMethod>

  <SqlMethod name="selectDisplayLogic" type="preparedStatement" return="multiple">
    <SqlMethodComment>Names of the columns and name of the fields of a tab</SqlMethodComment>
    <Sql>
      SELECT ad_field.seqno, ad_column.ColumnName As columnName, ad_column.ColumnName As columnNameInp, 
      ad_field.name as Name, ismandatory as required, ad_reference_value_id as referenceValue, 
      ad_column.ad_reference_id as reference, displayLength as displaySize, 'x' as htmltext, 
      isSameLine as issameline, isDisplayed as isdisplayed, isupdateable as isupdateable, 
      isparent, ad_column.FIELDLENGTH, ad_element.name as searchName, ad_column.ad_callout_id, 
      ad_column.ad_process_id, ad_field.isreadonly, to_char(ad_field.DISPLAYLOGIC) displaylogic, ad_field.ad_tab_id as tabid, 
      ad_callout.name as calloutname, moc.classname as classname_callout, momc.mappingname as mappingname_callout 
      FROM ad_field, 
           ad_column left join ad_element on ad_column.ad_element_id = ad_element.ad_element_id
           left join ad_callout on ad_column.ad_callout_id = ad_callout.ad_callout_id 
           left join ad_model_object moc on ad_callout.ad_callout_id = moc.ad_callout_id 
                              AND moc.action = 'C' 
                              AND moc.isactive = 'Y'
                              AND moc.isdefault = 'Y' 
           left join ad_model_object_mapping momc on moc.ad_model_object_id = momc.ad_model_object_id 
                              AND momc.isactive = 'Y' 
                              AND momc.isdefault = 'Y'
      WHERE ad_field.ad_column_id = ad_column.ad_column_id 
        AND ad_field.displaylogic is not null 
        AND AD_FIELD.ISDISPLAYED = 'Y' 
        AND ad_field.ad_tab_id = ?
      union
      select (case when upper(columnname)='CREATED' then 10000 
                   when upper(columnname)='CREATEDBY' then 10001
                   when upper(columnname)='UPDATED' then 10002
                   else 10003
              end), columnname,  columnname, c.name, 'N', 
             c.ad_reference_value_id, c.ad_reference_id, 44, 'x', 
             'N', 'Y', 'N', 'N', c.FIELDLENGTH, c.name, null, 
             null, 'Y', '@#ShowAudit@=''Y''', tb.ad_tab_id, null, null, null
       from ad_column c, ad_tab tb, ad_reference r
      where c.ad_table_id = tb.ad_table_id
        and upper(columnname) in ('CREATED', 'CREATEDBY', 'UPDATED', 'UPDATEDBY')
        and tb.ad_tab_id = ?
        and r.ad_reference_id = c.ad_reference_id
      ORDER BY SEQNO
    </Sql>
    <Parameter name="tab"/>
    <Parameter name="tab"/>
  </SqlMethod>

  <SqlMethod name="selectDisplayLogicTrl" type="preparedStatement" return="multiple">
    <SqlMethodComment>Names of the columns and name of the fields of a tab</SqlMethodComment>
    <Sql>
      SELECT ad_field.seqno, ad_column.ColumnName As columnName, ad_column.ColumnName As columnNameInp, 
      (CASE WHEN ad_field_trl.name IS NULL THEN '*' || ad_field.name ELSE ad_field_trl.name END) as Name, ismandatory as required, ad_reference_value_id as referenceValue, 
      ad_column.ad_reference_id as reference, displayLength as displaySize, 'x' as htmltext, 
      isSameLine as issameline, isDisplayed as isdisplayed, isupdateable as isupdateable, 
      isparent, ad_column.FIELDLENGTH, ad_element.name as searchName, ad_column.ad_callout_id, 
      ad_column.ad_process_id, ad_field.isreadonly, to_char(ad_field.DISPLAYLOGIC) displaylogic, ad_field.ad_tab_id as tabid, ad_callout.name as calloutname, 
      moc.classname as classname_callout, momc.mappingname as mappingname_callout
      FROM ad_field left join ad_field_trl on ad_field.ad_field_id = ad_field_trl.ad_field_id
                                          AND ad_field_trl.isactive = 'Y'
                                          AND ad_field_trl.ad_language = ?,
          ad_column left join ad_element on ad_column.ad_element_id = ad_element.ad_element_id
          left join ad_callout on ad_column.ad_callout_id = ad_callout.ad_callout_id 
           left join ad_model_object moc on ad_callout.ad_callout_id = moc.ad_callout_id 
                              AND moc.action = 'C' 
                              AND moc.isactive = 'Y'
                              AND moc.isdefault = 'Y' 
           left join ad_model_object_mapping momc on moc.ad_model_object_id = momc.ad_model_object_id 
                              AND momc.isactive = 'Y' 
                              AND momc.isdefault = 'Y'
      WHERE ad_field.ad_column_id = ad_column.ad_column_id 
        AND ad_field.ad_tab_id = ?
        AND ad_field.displaylogic is not null 
        AND AD_FIELD.ISDISPLAYED = 'Y' 
        union
      select (case when upper(columnname)='CREATED' then 10000 
                   when upper(columnname)='CREATEDBY' then 10001
                   when upper(columnname)='UPDATED' then 10002
                   else 10003
              end), columnname,  columnname, c.name, 'N', 
             c.ad_reference_value_id, c.ad_reference_id, 44, 'x', 
             'N', 'Y', 'N', 'N', c.FIELDLENGTH, c.name, null, 
             null, 'Y', '@#ShowAudit@=''Y''', tb.ad_tab_id, null, null, null
       from ad_column c, ad_tab tb, ad_reference r
      where c.ad_table_id = tb.ad_table_id
        and upper(columnname) in ('CREATED', 'CREATEDBY', 'UPDATED', 'UPDATEDBY')
        and tb.ad_tab_id = ?
         and r.ad_reference_id = c.ad_reference_id
      ORDER BY SEQNO
    </Sql>
    <Parameter name="adLanguage"/>
    <Parameter name="tab"/>    
    <Parameter name="tab"/>  
  </SqlMethod>

  <SqlMethod name="selectionColumns" type="preparedStatement" return="multiple">
    <SqlMethodComment>Names of the columns and name of the fields of a tab</SqlMethodComment>
    <Sql>
      SELECT ad_column.ColumnName As columnName, ad_column.ColumnName As columnNameInp, 
      ad_field.name as Name, ismandatory as required, ad_reference_value_id as referenceValue, 
      ad_column.ad_reference_id as reference, displayLength as displaySize, 'x' as htmltext, 
      isSameLine as issameline, isDisplayed as isdisplayed, isupdateable as isupdateable, 
      isparent, ad_column.FIELDLENGTH, ad_element.name as searchName, ad_column.ad_callout_id, 
      ad_column.ad_process_id, ad_field.isreadonly, ad_field.DISPLAYLOGIC, ad_field.ad_tab_id as tabid, 
      ad_callout.name as calloutname, moc.classname as classname_callout, momc.mappingname as mappingname_callout
      FROM ad_field, 
           ad_column left join ad_element on ad_column.ad_element_id = ad_element.ad_element_id
           left join ad_callout on ad_column.ad_callout_id = ad_callout.ad_callout_id 
           left join ad_model_object moc on ad_callout.ad_callout_id = moc.ad_callout_id 
                              AND moc.action = 'C' 
                              AND moc.isactive = 'Y'
                              AND moc.isdefault = 'Y' 
           left join ad_model_object_mapping momc on moc.ad_model_object_id = momc.ad_model_object_id 
                              AND momc.isactive = 'Y' 
                              AND momc.isdefault = 'Y'
      WHERE ad_field.ad_column_id = ad_column.ad_column_id 
        AND ad_field.ad_tab_id = ?
        AND upper(ad_column.columnname) in ('VALUE', 'NAME', 'DESCRIPTION')
      ORDER BY ad_field.SEQNO
    </Sql>
    <Parameter name="tab"/>
  </SqlMethod>
  <SqlMethod name="fieldGroupName" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Names of the columns and name of the fields of a tab</SqlMethodComment>
    <Sql>
      select name 
      from ad_fieldgroup 
      where ad_fieldgroup_id=? 
      and isactive='Y'
    </Sql>
    <Parameter name="adFieldgroupId"/>
  </SqlMethod>
  <SqlMethod name="fieldGroupNameTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Names of the columns and name of the fields of a tab</SqlMethodComment>
    <Sql>
      select (CASE WHEN ft.name IS NULL THEN '*' || f.name ELSE ft.name END) as name 
      from ad_fieldgroup f left join ad_fieldgroup_trl ft on f.ad_fieldgroup_id = ft.ad_fieldgroup_id 
                                                          and ft.ad_language = ?
      where f.ad_fieldgroup_id = ? 
      and f.isactive='Y'
    </Sql>
    <Parameter name="adLanguage"/>
    <Parameter name="adFieldgroupId"/>    
  </SqlMethod>
  <SqlMethod name="selectSerchFieldsSelection" type="preparedStatement" return="multiple">
      <SqlMethodComment>Campos de búsqueda</SqlMethodComment>
      <Sql> <![CDATA[
        SELECT AD_COLUMN.ad_column_id, (CASE WHEN AD_FIELD_TRL.NAME IS NULL THEN AD_FIELD.NAME ELSE AD_FIELD_TRL.NAME END) AS NAME, 
        ad_column.ad_reference_id as reference, ad_reference_value_id as referencevalue, ad_val_rule_id, fieldlength, displaylength, 
        columnname, '' as value, ad_tab.ad_window_id, columnname as columnnameinp, '' as htmltext, '' as xmltext, 
        columnname as realcolumnname, '' as xsqltext 
        FROM AD_COLUMN, 
             AD_FIELD left join AD_FIELD_TRL on AD_FIELD.ad_field_id = AD_FIELD_TRL.ad_field_id 
                                            AND AD_FIELD_TRL.AD_LANGUAGE =? , 
             AD_TAB 
        WHERE AD_COLUMN.ad_column_id = AD_FIELD.ad_column_id
        AND AD_FIELD.ad_tab_id = AD_TAB.ad_tab_id 
        AND AD_COLUMN.isactive='Y'
        AND AD_FIELD.isactive='Y' 
        AND ISSELECTIONCOLUMN='Y' 
        AND ad_field.ad_tab_id=?
        ORDER BY AD_COLUMN.seqno, AD_FIELD.seqno
      ]]></Sql>
        <Parameter name="adLanguage"/>
        <Parameter name="adTabId"/>
   </SqlMethod>
   <SqlMethod name="selectSerchFields" type="preparedStatement" return="multiple">
      <SqlMethodComment>Campos de búsqueda</SqlMethodComment>
      <Sql> <![CDATA[
        SELECT AD_COLUMN.ad_column_id, (CASE WHEN AD_FIELD_TRL.NAME IS NULL THEN AD_FIELD.NAME ELSE AD_FIELD_TRL.NAME END) AS NAME, 
        ad_column.ad_reference_id as reference, ad_reference_value_id as referencevalue, ad_val_rule_id, fieldlength, displaylength, 
        columnname, '' as value, ad_tab.ad_window_id, columnname as columnnameinp, '' as htmltext, '' as xmltext, 
        columnname as realcolumnname, '' as xsqltext 
        FROM AD_COLUMN, 
             AD_FIELD left join AD_FIELD_TRL on AD_FIELD.ad_field_id = AD_FIELD_TRL.ad_field_id 
                                            AND AD_FIELD_TRL.AD_LANGUAGE =? , 
             AD_TAB 
        WHERE AD_COLUMN.ad_column_id = AD_FIELD.ad_column_id
        AND AD_FIELD.ad_tab_id = AD_TAB.ad_tab_id 
        AND AD_COLUMN.isactive='Y'
        AND AD_FIELD.isactive='Y' 
        AND isidentifier='Y'
        AND ad_field.ad_tab_id=?
        ORDER BY AD_COLUMN.seqno, AD_FIELD.seqno
      ]]></Sql>
        <Parameter name="adLanguage"/>
        <Parameter name="adTabId"/>
   </SqlMethod>

   <SqlMethod name="selectSearchs" type="preparedStatement" return="multiple">
    <SqlMethodComment>Names of the columns and name of the fields of a tab</SqlMethodComment>
    <Sql><![CDATA[
      SELECT R.NAME, T.TABLENAME AS REFERENCE, C.COLUMNNAME AS COLUMNNAME, RSC.NAME AS COLUMNNAMEINP, 
      RSC.COLUMNNAME AS REFERENCEVALUE, MO.CLASSNAME, MOM.MAPPINGNAME, RSC.COLUMN_SUFFIX AS COLUMNNAME_END 
      FROM AD_REFERENCE R left join AD_REF_SEARCH RS  on R.AD_REFERENCE_ID = RS.AD_REFERENCE_ID 
                          left join AD_REF_SEARCH_COLUMN RSC on RS.AD_REF_SEARCH_ID = RSC.AD_REF_SEARCH_ID
                                AND RSC.COLUMNTYPE = ?, 
           AD_MODEL_OBJECT MO, AD_MODEL_OBJECT_MAPPING MOM, 
           AD_TABLE T, AD_COLUMN C 
      WHERE R.VALIDATIONTYPE = 'S' 
      AND R.AD_REFERENCE_ID = ?
      AND R.AD_REFERENCE_ID = MO.AD_REFERENCE_ID
      AND MO.ACTION = 'S' 
      AND MO.ISACTIVE = 'Y'
      AND MO.ISDEFAULT = 'Y'
      AND MO.AD_MODEL_OBJECT_ID = MOM.AD_MODEL_OBJECT_ID 
      AND MOM.ISACTIVE = 'Y' 
      AND MOM.ISDEFAULT = 'Y'
      AND RS.AD_TABLE_ID = T.AD_TABLE_ID 
      AND RS.AD_COLUMN_ID = C.AD_COLUMN_ID 
    ]]></Sql>
    <Parameter name="columntype"/>
    <Parameter name="searchId"/>
  </SqlMethod>
</SqlClass>
