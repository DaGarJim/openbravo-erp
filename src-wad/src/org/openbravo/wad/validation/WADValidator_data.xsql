<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html 
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SL 
 * All portions are Copyright (C) 2009 Openbravo SL 
 * All Rights Reserved. 
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->

<SqlClass name="WADValidatorData" package="org.openbravo.wad.validation">
  <SqlMethod name="checkIdentifier" type="preparedStatement" return="multiple">
    <Sql>
      <![CDATA[
          select t.tablename as objectName
          from ad_table t, ad_module m, ad_package p
         where not exists (select 1
                             from ad_column c
                            where c.ad_table_id = t.ad_table_id
                              and c.isidentifier = 'Y')
           and t.ad_package_id = p.ad_package_id
           and m.ad_module_id = p.ad_module_id
           and (m.javapackage in ('1') or 'Y'=?)
      ]]>
    </Sql>
    <Field name="objecttype" value=""/>
    <Field name="currentvalue" value=""/>
    <Field name="expectedvalue" value=""/>
    <Parameter name="module" optional="true" type="replace" after="m.javapackage in (" text="'1'"/>
    <Parameter name="checkAll"/>
  </SqlMethod>
  
  <SqlMethod name="checkKey" type="preparedStatement" return="multiple">
    <Sql>
      <![CDATA[
        select t.tablename as objectName
          from ad_table t, ad_module m, ad_package p
         where not exists (select 1
                             from ad_column c
                            where c.ad_table_id = t.ad_table_id
                              and c.iskey = 'Y')
           and t.ad_package_id = p.ad_package_id
           and m.ad_module_id = p.ad_module_id
           and (m.javapackage in ('1') or 'Y'=?)
      ]]>
    </Sql>
    <Parameter name="module" optional="true" type="replace" after="m.javapackage in (" text="'1'"/>
    <Parameter name="checkAll"/>
  </SqlMethod>
  
  
  <SqlMethod name="checkModelObject" type="preparedStatement" return="multiple">
    <Sql>
      <![CDATA[
        select to_char(p.name) objectname, 'Process' as objectType, o.classname as currentvalue, m.javapackage as expectedvalue 
          from ad_model_object o, ad_process p, ad_module m
         where o.ad_process_id = p.ad_process_id
           and p.ad_module_id = m.ad_module_id
           and o.classname not like m.javapackage||'.%'
           and (1=1 and m.javapackage in ('1') or 'Y'=?)
         union
        select to_char(f.name), 'Form' as objectType, o.classname as currentvalue, m.javapackage as expectedvalue 
          from ad_model_object o, ad_form f, ad_module m
         where o.ad_form_id = f.ad_form_id
           and f.ad_module_id = m.ad_module_id
           and o.classname not like m.javapackage||'.%'
           and (2=2 and m.javapackage in ('2') or 'Y'=?)
         union
        select to_char(c.name), 'Callout' as objectType, o.classname as currentvalue, m.javapackage as expectedvalue 
          from ad_model_object o, ad_callout c, ad_module m
         where o.ad_callout_id = c.ad_callout_id
           and c.ad_module_id = m.ad_module_id
           and o.classname not like m.javapackage||'.%'
           and (3=3 and m.javapackage in ('3') or 'Y'=?)
         union
        select to_char(r.name), 'Reference' as objectType, o.classname as currentvalue, m.javapackage as expectedvalue 
          from ad_model_object o, ad_reference r, ad_module m
         where o.ad_reference_id = r.ad_reference_id
           and r.ad_module_id = m.ad_module_id
           and o.classname not like m.javapackage||'.%'
           and (4=4 and m.javapackage in ('4') or 'Y'=?)
         order by 4, 2, 1
      ]]>
    </Sql>
    <Parameter name="module" optional="true" type="replace" after="1=1 and m.javapackage in (" text="'1'"/>
    <Parameter name="checkAll"/>
    <Parameter name="module" optional="true" type="replace" after="2=2 and m.javapackage in (" text="'2'"/>
    <Parameter name="checkAll"/>
    <Parameter name="module" optional="true" type="replace" after="3=3 and m.javapackage in (" text="'3'"/>
    <Parameter name="checkAll"/>
    <Parameter name="module" optional="true" type="replace" after="4=4 and m.javapackage in (" text="'4'"/>
    <Parameter name="checkAll"/>
  </SqlMethod>
  
  
</SqlClass>
