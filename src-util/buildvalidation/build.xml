<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo Public License 
 * Version 1.1 (the "License"), being the Mozilla Public License 
 * version 1.1  with a permitted attribution clause ; you may not use 
 * this file except in compliance with the License. 
 * You may obtain a copy of the License at  
 * http://www.openbravo.com/legal/license.txt 
 * Software distributed under the License is distributed on an 
 * "AS IS" basis, WITHOUT WARRANTY OF  ANY KIND, either express or 
 * implied. See the License for the specific language governing rights 
 * and  limitations under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SL 
 * All portions are Copyright (C) 2005-2009 Openbravo SL 
 * All Rights Reserved. 
 * Contributor(s): Openbravo S.L.
 ************************************************************************
-->
<!--
List of targets:

init: creates the needed folders.
clean: removes all the created files and folders.
sqlc: generates java files from xsql's files.
compileSqlc: compile the java files generated from xsql's files.
compile: compile the java files of the project.
build.jar: generates the jar file in the lib folder.
build: compile the project, including the xsql's files and generates the jar and doc.
doc: generates the api for the project.
-->
<project name="openbravo-pre-install" default="compile" basedir=".">
  <property name="build.pre" value="${basedir}/build/classes" />
  <property name="build.pre.sqlc" value="${basedir}/build/javasqlc" />
  <property name="build.pre.src" value="${basedir}/src/" />
  <property name="main.dir" value="${basedir}/../.." />

  <path id="pre.class.path">
    <pathelement path="../src-core/build/classes" />
    <pathelement path="build/classes" />
    <dirset dir="${base.modules}">
      <include name="*/build/classes/" />
    </dirset>
    <pathelement path="config"/>
    <fileset dir="${base.lib}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <condition property="module.not.provided">
    <equals arg1="${module}" arg2="%" />
  </condition>
  <condition property="checkCore">
    <equals arg1="${module}" arg2="org.openbravo" />
  </condition>
  <target name="init">
    <mkdir dir="${build.pre}" />
    <mkdir dir="${build.pre.sqlc}" />
    <mkdir dir="${build.pre.sqlc}/src" />
    <mkdir dir="${main.dir}/modules/${module}/build/" />
    <mkdir dir="${main.dir}/modules/${module}/build/javasqlc" />
    <mkdir dir="${main.dir}/modules/${module}/build/classes" />
  </target>

  <target name="clean">
    <delete dir="${build.pre}" failonerror="false" includeemptydirs="true" />
    <delete dir="${build.pre.sqlc}" failonerror="false" includeemptydirs="true" />
  </target>

  <target name="sqlc" depends="init">
    <java classname="org.openbravo.data.Sqlc" jvm="${env.JAVA_HOME}/bin/java" fork="yes" maxmemory="${build.maxmemory}">
      <arg line="'${base.config}'/Openbravo.properties .xsql ./src/org '${build.pre.sqlc}'" />
      <classpath refid="pre.class.path" />
    </java>
  	
  	<java classname="org.openbravo.data.Sqlc" jvm="${env.JAVA_HOME}/bin/java" fork="yes" maxmemory="${build.maxmemory}">
      <arg line="'${base.config}'/Openbravo.properties .xsql '${base.modules}' '${build.pre.sqlc}'/src */src-util/buildvalidation" />
  	  <classpath refid="pre.class.path" />
  	</java>
  </target>

  <target name="compileSqlc" depends="sqlc">
    <javac srcdir="${build.pre.sqlc}/src" includes="**/*.java" destdir="${build.pre}" encoding="UTF-8" debug="true" debuglevel="lines,vars,source">
      <classpath refid="pre.class.path" />
    </javac>
  </target>


  <target name="javacCore" if="checkCore">
    <javac srcdir="${main.dir}" includes="src-util/buildvalidation/src/**/*.java" destdir="${build.pre}" deprecation="on" encoding="UTF-8" debug="true" debuglevel="lines,vars,source">
      <classpath refid="pre.class.path" />
    </javac>
  </target>
  <target name="javacModule" unless="checkCore">
    <javac srcdir="${main.dir}" includes="modules/${module}/src-util/buildvalidation/**/*.java" destdir="${main.dir}/modules/${module}/build/classes" deprecation="on" encoding="UTF-8" debug="true" debuglevel="lines,vars,source">
      <classpath refid="pre.class.path" />
    </javac>
  </target>
  
  <target name="compile" depends="checkmodule,compileSqlc,javacCore,javacModule">
    <copy todir="${build.pre}" encoding="UTF-8">
      <fileset dir="${build.pre.src}" includes="**/*xml" />
      <fileset dir="${build.pre.src}" includes="**/*html" />
    </copy>
    <copy todir="${build.pre}" encoding="UTF-8">
      <fileset dir="${base.modules}">
          <include name="*/src-buildvalidation/**/*" />
          <exclude name="*/src-buildvalidation/**/*.java" />
          <exclude name="*/src-buildvalidation/**/*.xsql" />
      </fileset>
      <mapper type="regexp" from="(.*\${file.separator}src-buildvalidation/)(.*)" to="\2" />
    </copy>
  </target>

  <target name="build.jar">
    <jar destfile="${build.pre.lib}/openbravo-pre.jar">
      <fileset dir="${build.pre}" />
      <manifest>
        <attribute name="Built-By" value="Openbravo S.L." />
        <!--section name="common/class1.class">
        <attribute name="Sealed" value="false"/>
      </section-->
      </manifest>
    </jar>
  </target>

  <target name="build" depends="compile, build.jar">
  </target>

  
  <target name="validate" >
    <taskdef name="ValidationHandler" classname="org.openbravo.buildvalidation.ValidationHandler" onerror="failall">
      <classpath refid="pre.class.path" />
    </taskdef>
    <ValidationHandler basedir="${base.src}/../" module="${module}" />
  </target>
  
  <target name="checkmodule"  if="module.not.provided">
    <fail>You need to specify a module</fail>
  </target>
  
</project>
