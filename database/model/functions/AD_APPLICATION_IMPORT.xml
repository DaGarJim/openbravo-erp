<?xml version="1.0"?>
  <database name="FUNCTION AD_APPLICATION_IMPORT">
    <function name="AD_APPLICATION_IMPORT" type="NULL">
      <parameter name="p_tableidfrom" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_tableidto" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_windowidfrom" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_windowidto" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_referenceidfrom" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_referenceidto" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_valruleidfrom" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_valruleidto" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_elementidfrom" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_elementidto" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_menuidfrom" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_menuidto" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_sequenceidfrom" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_sequenceidto" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_baseinstalation" type="CHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/************************************************************************* 
* The contents of this file are subject to the Openbravo  Public  License 
* Version  1.0  (the  "License"),  being   the  Mozilla   Public  License 
* Version 1.1  with a permitted attribution clause; you may not  use this 
* file except in compliance with the License. You  may  obtain  a copy of 
* the License at http://www.openbravo.com/legal/license.html 
* Software distributed under the License  is  distributed  on  an "AS IS" 
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the 
* License for the specific  language  governing  rights  and  limitations 
* under the License. 
* The Original Code is Openbravo ERP. 
* The Initial Developer of the Original Code is Openbravo SL 
* All portions are Copyright (C) 2001-2006 Openbravo SL 
* All Rights Reserved. 
* Contributor(s):  ______________________________________. 
************************************************************************/ 
 v_minId     NUMBER(10); 
-- v_maxId     NUMBER(10); 
 v_tableOffset   NUMBER(10); 
 v_windowOffset   NUMBER(10); 
 v_columnOffset   NUMBER(10); 
 v_tabOffset    NUMBER(10); 
 v_auxiliarinputOffset NUMBER(10); 
 v_fieldOffset   NUMBER(10); 
 v_fieldgroupOffset  NUMBER(10); 
 v_referenceOffset  NUMBER(10); 
 v_reftableOffset  NUMBER(10); --NOT needed because it lacks of an ID 
 v_reflistOffset   NUMBER(10); 
 v_valruleOffset   NUMBER(10); 
 v_elementOffset   NUMBER(10); 
 v_formOffset   NUMBER(10); 
 v_messageOffset   NUMBER(10); 
 v_menuOffset   NUMBER(10); 
 v_reportviewOffset  NUMBER(10); 
 v_processOffset   NUMBER(10); 
 v_processparaOffset  NUMBER(10); 
 v_sequenceOffset  NUMBER(10); 
 v_taskOffset   NUMBER(10); 
 v_treeOffset   NUMBER(10); 
 v_workflowOffset  NUMBER(10); 
 v_wfnodeOffset   NUMBER(10); 
 v_wfnodenextOffset  NUMBER(10); 
 v_nextNo    NUMBER(10); 
BEGIN 
--AD_Table 
 --Next sequence number (blocking for update) 
 SELECT CurrentNextSys INTO v_nextNo FROM AD_Sequence 
 WHERE Name='AD_Table' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' 
 FOR UPDATE OF CurrentNextSys;
 --Mininum and maximum values of ID in TAX_AUX 
 SELECT MIN(AD_TABLE_ID)--, MAX(AD_TABLE_ID) 
 INTO v_minId--, v_maxId 
 FROM TAD_AUX.AD_TABLE WHERE AD_TABLE_ID BETWEEN p_tableIdFrom AND p_tableIdTo; 
 v_tableOffset:=v_nextNo - v_minId; 
/* UPDATE AD_SEQUENCE SET CurrentNextSys=CurrentNextSys + (v_maxId-v_minId) + INCREMENTNO 
 WHERE  Name='AD_Table' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y'; */ 
 
 
--AD_Column 
 SELECT CurrentNextSys INTO v_nextNo FROM AD_Sequence 
 WHERE Name='AD_Column' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' 
 FOR UPDATE OF CurrentNextSys;
 SELECT MIN(AD_COLUMN_ID)--, MAX(AD_COLUMN_ID) 
 INTO v_minId--, v_maxId 
 FROM TAD_AUX.AD_COLUMN WHERE AD_TABLE_ID BETWEEN p_tableIdFrom AND p_tableIdTo; 
 v_columnOffset:=v_nextNo - v_minId; 
/* UPDATE AD_SEQUENCE SET CurrentNextSys=CurrentNextSys + (v_maxId-v_minId) + INCREMENTNO 
 WHERE  Name='AD_Column' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y'; */ 
 
 
--AD_Tab 
 SELECT CurrentNextSys INTO v_nextNo FROM AD_Sequence 
 WHERE Name='AD_Tab' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' 
 FOR UPDATE OF CurrentNextSys;
 SELECT MIN(AD_TAB_ID)--, MAX(AD_TAB_ID) 
 INTO v_minId--, v_maxId 
 FROM TAD_AUX.AD_TAB WHERE AD_TABLE_ID BETWEEN p_tableIdFrom AND p_tableIdTo; 
 v_tabOffset:=v_nextNo - v_minId; 
/* UPDATE AD_SEQUENCE SET CurrentNextSys=CurrentNextSys + (v_maxId-v_minId) + INCREMENTNO 
 WHERE  Name='AD_Tab' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y';*/ 
--AD_Window 
 SELECT CurrentNextSys INTO v_nextNo FROM AD_Sequence 
 WHERE Name='AD_Window' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' 
 FOR UPDATE OF CurrentNextSys;
 SELECT MIN(AD_WINDOW_ID)--, MAX(AD_WINDOW_ID) 
 INTO v_minId--, v_maxId 
 FROM TAD_AUX.AD_WINDOW WHERE AD_WINDOW_ID IN 
   (SELECT AD_WINDOW_ID FROM TAD_AUX.AD_TAB WHERE AD_TABLE_ID BETWEEN p_tableIdFrom AND p_tableIdTo) 
 AND AD_WINDOW_ID BETWEEN p_windowIdFrom AND p_windowIdTo; 
 v_windowOffset:=v_nextNo - v_minId; 
/* UPDATE AD_SEQUENCE SET CurrentNextSys=CurrentNextSys + (v_maxId-v_minId) + INCREMENTNO 
 WHERE  Name='AD_Window' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y';*/ 
--AD_Field 
 SELECT CurrentNextSys INTO v_nextNo FROM AD_Sequence 
 WHERE Name='AD_Field' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' 
 FOR UPDATE OF CurrentNextSys;
 SELECT MIN(AD_FIELD_ID)--, MAX(AD_FIELD_ID) 
 INTO v_minId--, v_maxId 
 FROM TAD_AUX.AD_FIELD WHERE AD_TAB_ID IN 
   (SELECT AD_TAB_ID FROM TAD_AUX.AD_TAB WHERE AD_TABLE_ID BETWEEN p_tableIdFrom AND p_tableIdTo); 
 v_fieldOffset:=v_nextNo - v_minId; 
/* UPDATE AD_SEQUENCE SET CurrentNextSys=CurrentNextSys + (v_maxId-v_minId) + INCREMENTNO 
 WHERE  Name='AD_Field' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y';*/ 
--AD_FieldGroup 
 SELECT CurrentNextSys INTO v_nextNo FROM AD_Sequence 
 WHERE Name='AD_FieldGroup' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' 
 FOR UPDATE OF CurrentNextSys;
 SELECT MIN(AD_FIELDGROUP_ID)--, MAX(AD_FIELDGROUP_ID) 
 INTO v_minId--, v_maxId 
 FROM TAD_AUX.AD_FIELDGROUP WHERE AD_FIELDGROUP_ID IN 
   (SELECT AD_FIELDGROUP_ID FROM TAD_AUX.AD_FIELD WHERE AD_TAB_ID IN 
      (SELECT AD_TAB_ID FROM TAD_AUX.AD_TAB WHERE AD_TABLE_ID BETWEEN p_tableIdFrom AND p_tableIdTo)); 
 v_fieldgroupOffset:=v_nextNo - v_minId; 
/* UPDATE AD_SEQUENCE SET CurrentNextSys=CurrentNextSys + (v_maxId-v_minId) + INCREMENTNO 
 WHERE  Name='AD_FieldGroup' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y';*/ 
--AD_Reference 
 SELECT CurrentNextSys INTO v_nextNo FROM AD_Sequence 
 WHERE Name='AD_Reference' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' 
 FOR UPDATE OF CurrentNextSys;
 SELECT MIN(AD_REFERENCE_ID)--, MAX(AD_REFERENCE_ID) 
 INTO v_minId--, v_maxId 
 FROM TAD_AUX.AD_REFERENCE WHERE AD_REFERENCE_ID BETWEEN p_referenceIdFrom AND p_referenceIdTo; 
 v_referenceOffset:=v_nextNo - v_minId; 
 /*UPDATE AD_SEQUENCE SET CurrentNextSys=CurrentNextSys + (v_maxId-v_minId) + INCREMENTNO 
 WHERE  Name='AD_Reference' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y';*/ 
--AD_Ref_List 
 SELECT CurrentNextSys INTO v_nextNo FROM AD_Sequence 
 WHERE Name='AD_Ref_List' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' 
 FOR UPDATE OF CurrentNextSys;
 SELECT MIN(AD_REF_LIST_ID)--, MAX(AD_REF_LIST_ID) 
 INTO v_minId--, v_maxId 
 FROM TAD_AUX.AD_REF_LIST WHERE AD_REFERENCE_ID BETWEEN p_referenceIdFrom AND p_referenceIdTo; 
 v_reflistOffset:=v_nextNo - v_minId; 
 /*UPDATE AD_SEQUENCE SET CurrentNextSys=CurrentNextSys + (v_maxId-v_minId) + INCREMENTNO 
 WHERE  Name='AD_Ref_List' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y';*/ 
--AD_Val_Rule 
 SELECT CurrentNextSys INTO v_nextNo FROM AD_Sequence 
 WHERE Name='AD_Val_Rule' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' 
 FOR UPDATE OF CurrentNextSys;
 SELECT MIN(AD_VAL_RULE_ID)--, MAX(AD_VAL_RULE_ID) 
 INTO v_minId--, v_maxId 
 FROM TAD_AUX.AD_VAL_RULE WHERE AD_VAL_RULE_ID BETWEEN p_valruleIdFrom AND p_valruleIdTo; 
 v_valruleOffset:=v_nextNo - v_minId; 
 /*UPDATE AD_SEQUENCE SET CurrentNextSys=CurrentNextSys + (v_maxId-v_minId) + INCREMENTNO 
 WHERE  Name='AD_Val_Rule' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y';*/ 
--AD_Element 
 SELECT CurrentNextSys INTO v_nextNo FROM AD_Sequence 
 WHERE Name='AD_Element' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' 
 FOR UPDATE OF CurrentNextSys;
 SELECT MIN(AD_ELEMENT_ID)--, MAX(AD_ELEMENT_ID) 
 INTO v_minId--, v_maxId 
 FROM TAD_AUX.AD_ELEMENT WHERE AD_ELEMENT_ID BETWEEN p_elementIdFrom AND p_elementIdTo; 
 v_elementOffset:=v_nextNo - v_minId; 
 /*UPDATE AD_SEQUENCE SET CurrentNextSys=CurrentNextSys + (v_maxId-v_minId) + INCREMENTNO 
 WHERE  Name='AD_Element' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y';*/ 
--AD_Menu 
 SELECT CurrentNextSys INTO v_nextNo FROM AD_Sequence 
 WHERE Name='AD_Menu' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' 
 FOR UPDATE OF CurrentNextSys;
 SELECT MIN(AD_MENU_ID)--, MAX(AD_MENU_ID) 
 INTO v_minId--, v_maxId 
 FROM TAD_AUX.AD_MENU WHERE AD_MENU_ID BETWEEN p_menuIdFrom AND p_menuIdTo; 
 v_menuOffset:=v_nextNo - v_minId; 
 /*UPDATE AD_SEQUENCE SET CurrentNextSys=CurrentNextSys + (v_maxId-v_minId) + INCREMENTNO 
 WHERE  Name='AD_Menu' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y';*/ 
--AD_Sequence 
 SELECT CurrentNextSys INTO v_nextNo FROM AD_Sequence 
 WHERE Name='AD_Sequence' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' 
 FOR UPDATE OF CurrentNextSys;
 SELECT MIN(AD_SEQUENCE_ID)--, MAX(AD_SEQUENCE_ID) 
 INTO v_minId--, v_maxId 
 FROM TAD_AUX.AD_SEQUENCE WHERE AD_SEQUENCE_ID BETWEEN p_sequenceIdFrom AND p_sequenceIdTo; 
 v_sequenceOffset:=v_nextNo - v_minId; 
/* UPDATE AD_SEQUENCE SET CurrentNextSys=CurrentNextSys + (v_maxId-v_minId) + INCREMENTNO 
 WHERE  Name='AD_Sequence' AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y'; 
*/ 
 
 
--AD_REF_TABLE doesn't need a translation because it lacks of an ID 
--Por la misma razon, tampoco necesitan traslacion las tablas de traduccion (..._TRL) 
 
--Comienzo de carga de datos. 
--Primero, inhabilitar constraints de integridad referencial (existen referencias circulares...) 
 --AD_Table. No inhabilitamos el trigger para que inserte valores en ad_sequence 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TABLE DISABLE CONSTRAINT AD_WINDOW_TABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TABLE DISABLE CONSTRAINT AD_VALRULE_TABLE'); 
 --AD_Column. No tiene trigger para insert 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_COLUMN DISABLE CONSTRAINT ADPROCESS_ADCOLUMN'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_COLUMN DISABLE CONSTRAINT AD_ELEMENT_AD_COLUMN'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_COLUMN DISABLE CONSTRAINT AD_REFERENCE_COLUMNDATATYPE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_COLUMN DISABLE CONSTRAINT AD_REFERENCE_COLUMNVALUE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_COLUMN DISABLE CONSTRAINT AD_TABLE_COLUMN'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_COLUMN DISABLE CONSTRAINT AD_VALRULE_COLUMN'); 
 --AD_Tab. Inhabilitamos trigger para que no inserte en ad_tab_trl 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_TAB_TRG DISABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB DISABLE CONSTRAINT ADCOLUMN_ADTABSORTORDER'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB DISABLE CONSTRAINT ADCOLUMN_ADTABSORTYESNO'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB DISABLE CONSTRAINT ADPROCESS_ADTAB'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB DISABLE CONSTRAINT ADTAB_INCLUDED'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB DISABLE CONSTRAINT AD_COLUMN_AD_TAB'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB DISABLE CONSTRAINT AD_TABLE_TAB'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB DISABLE CONSTRAINT AD_WINDOW_TAB'); 
 --AD_Window. Constraints no necesita. Triggers si. Habra que insertar a mano en la window_access!!! 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_WINDOW_TRG DISABLE'); 
 --AD_Window_Access 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_WINDOW_ACCESS DISABLE CONSTRAINT ADWINDOW_ADWINDOWACCESS'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_WINDOW_ACCESS DISABLE CONSTRAINT ADROLE_ADWINDOWACCESS'); 
 --AD_Field 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_FIELD_TRG DISABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_FIELD DISABLE CONSTRAINT ADFIELDGROUP_ADFIELD'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_FIELD DISABLE CONSTRAINT AD_COLUMN_FIELD'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_FIELD DISABLE CONSTRAINT AD_TAB_FIELD'); 
 --AD_FieldGroup no necesita. Triggers si 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_FIELDGROUP_TRG DISABLE'); 
 --AD_Reference no necesita. Triggers si 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_REFERENCE_TRG DISABLE'); 
 --AD_Ref_List 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_REF_LIST_TRG DISABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_REF_LIST DISABLE CONSTRAINT AD_REFERENCE_REFLIST'); 
 --AD_Ref_Table 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_REF_TABLE DISABLE CONSTRAINT ADD_TABLE_REFTABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_REF_TABLE DISABLE CONSTRAINT AD_COLUMN_REFTABLE_DISPLAY'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_REF_TABLE DISABLE CONSTRAINT AD_COLUMN_REFTABLE_ID'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_REF_TABLE DISABLE CONSTRAINT AD_REFERENCE_REFTABLE'); 
 --AD_Menu 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_MENU_TRG DISABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_MENU DISABLE CONSTRAINT ADFORM_ADMENU'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_MENU DISABLE CONSTRAINT ADPROCESS_ADMENU'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_MENU DISABLE CONSTRAINT ADTASK_ADMENU'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_MENU DISABLE CONSTRAINT ADWINDOW_ADMENU'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_MENU DISABLE CONSTRAINT ADWORKFLOW_ADMENU'); 
 --AD_Treenode 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TREENODE DISABLE CONSTRAINT ADTREE_ADTREENODE'); 
 --AD_Element 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_ELEMENT_TRG DISABLE'); 
 --AD_Val_Rule no necesita ni constraints ni triggers 
 --AD_Tab_Trl 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB_TRL DISABLE CONSTRAINT AD_TABTRL'); 
 --AD_Window_Trl 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_WINDOW_TRL DISABLE CONSTRAINT AD_WINDOWTRL'); 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_WINDOW_TRL_TRG DISABLE'); 
 --AD_Field_Trl 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_FIELD_TRL DISABLE CONSTRAINT AD_FIELDTRL'); 
 --AD_FieldGroup_Trl 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_FIELDGROUP_TRL DISABLE CONSTRAINT ADFIELDGROUP_TRL'); 
 --AD_Ref_List_Trl 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_REF_LIST_TRL DISABLE CONSTRAINT AD_REFLISTTRL'); 
 --AD_Element_Trl 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_ELEMENT_TRL_TRG DISABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_ELEMENT_TRL DISABLE CONSTRAINT ADELEMENT_ADELEMENTTRL'); 
 --AD_Menu_Trl 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_MENU_TRL DISABLE CONSTRAINT AD_MENUTRL'); 
 
 
 
 
 --Insercion de valores, con traslacion de claves 
 --AD_Table 
 INSERT INTO AD_TABLE (AD_TABLE_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY, UPDATED, UPDATEDBY, 
 NAME, DESCRIPTION, HELP, TABLENAME, ISVIEW, ACCESSLEVEL, ENTITYTYPE, AD_WINDOW_ID, AD_VAL_RULE_ID, 
 LOADSEQ, ISSECURITYENABLED, ISDELETEABLE, ISHIGHVOLUME, IMPORTTABLE, ISCHANGELOG, REPLICATIONTYPE, 
 PO_WINDOW_ID, ISDEFAULTACCT) 
 SELECT AD_TABLE_ID+v_tableOffset, 0, 0, ISACTIVE, now(), 0, now(), 0, 
 NAME, DESCRIPTION, HELP, TABLENAME, ISVIEW, ACCESSLEVEL, ENTITYTYPE, CASE WHEN AD_WINDOW_ID>699999 
 THEN AD_WINDOW_ID+v_windowOffset ELSE AD_WINDOW_ID END, AD_VAL_RULE_ID+v_valruleOffset, 
 LOADSEQ, ISSECURITYENABLED, ISDELETEABLE, ISHIGHVOLUME, IMPORTTABLE, ISCHANGELOG, REPLICATIONTYPE, 
 CASE WHEN PO_WINDOW_ID>699999 THEN PO_WINDOW_ID+v_windowOffset ELSE PO_WINDOW_ID END, ISDEFAULTACCT 
 FROM TAD_AUX.AD_TABLE WHERE AD_TABLE_ID BETWEEN p_tableIdFrom AND p_tableIdTo; 
 
 --AD_Column 
 INSERT INTO AD_COLUMN (AD_COLUMN_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, UPDATED, CREATEDBY, UPDATEDBY, 
 NAME, DESCRIPTION, HELP, VERSION, ENTITYTYPE, COLUMNNAME, AD_TABLE_ID, AD_REFERENCE_ID, 
 AD_REFERENCE_VALUE_ID, AD_VAL_RULE_ID, FIELDLENGTH, DEFAULTVALUE, ISKEY, ISPARENT, 
 ISMANDATORY, ISUPDATEABLE, READONLYLOGIC, ISIDENTIFIER, SEQNO, ISTRANSLATED, ISENCRYPTED, 
 CALLOUT, VFORMAT, VALUEMIN, VALUEMAX, ISSELECTIONCOLUMN, AD_ELEMENT_ID, AD_PROCESS_ID, 
 ISSYNCDATABASE, ISSESSIONATTR, ISSECONDARYKEY) 
 SELECT AD_COLUMN_ID+v_columnOffset, 0, 0, ISACTIVE, now(), now(), 0, 0, 
 NAME, DESCRIPTION, HELP, VERSION, ENTITYTYPE, COLUMNNAME, AD_TABLE_ID+v_tableOffset, 
 CASE WHEN AD_REFERENCE_ID>699999 THEN AD_REFERENCE_ID+v_referenceOffset ELSE AD_REFERENCE_ID END, 
 CASE WHEN AD_REFERENCE_VALUE_ID>699999 THEN AD_REFERENCE_VALUE_ID+v_referenceOffset ELSE AD_REFERENCE_VALUE_ID END, 
 CASE WHEN AD_VAL_RULE_ID>699999 THEN AD_VAL_RULE_ID+v_valruleOffset ELSE AD_VAL_RULE_ID END, FIELDLENGTH, DEFAULTVALUE, ISKEY, ISPARENT, 
 ISMANDATORY, ISUPDATEABLE, READONLYLOGIC, ISIDENTIFIER, SEQNO, ISTRANSLATED, ISENCRYPTED, 
 CALLOUT, VFORMAT, VALUEMIN, VALUEMAX, ISSELECTIONCOLUMN, CASE WHEN AD_ELEMENT_ID>699999 
 THEN AD_ELEMENT_ID+v_elementOffset ELSE AD_ELEMENT_ID END, AD_PROCESS_ID+v_processOffset, 
 ISSYNCDATABASE, ISSESSIONATTR, ISSECONDARYKEY 
 FROM TAD_AUX.AD_COLUMN WHERE AD_TABLE_ID BETWEEN p_tableIdFrom AND p_tableIdTo; 
 
 
 --ad_tab 
 INSERT INTO AD_TAB (AD_TAB_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY, UPDATED, 
 UPDATEDBY, NAME, DESCRIPTION, HELP, AD_TABLE_ID, AD_WINDOW_ID, SEQNO, TABLEVEL, ISSINGLEROW, 
 ISINFOTAB, ISTRANSLATIONTAB, ISREADONLY, AD_COLUMN_ID, HASTREE, WHERECLAUSE, ORDERBYCLAUSE, 
 COMMITWARNING, AD_PROCESS_ID, PROCESSING, AD_IMAGE_ID, IMPORTFIELDS, AD_COLUMNSORTORDER_ID, 
 AD_COLUMNSORTYESNO_ID, ISSORTTAB, ENTITYTYPE, INCLUDED_TAB_ID, FILTERCLAUSE) 
 SELECT AD_TAB_ID+v_tabOffset, 0, 0, ISACTIVE, now(), 0, now(), 
 0, NAME, DESCRIPTION, HELP, AD_TABLE_ID+v_tableOffset, CASE WHEN AD_WINDOW_ID>699999 
 THEN AD_WINDOW_ID+v_windowOffset ELSE AD_WINDOW_ID END, SEQNO, TABLEVEL, 
 ISSINGLEROW, ISINFOTAB, ISTRANSLATIONTAB, ISREADONLY, AD_COLUMN_ID+v_columnOffset, HASTREE, WHERECLAUSE, 
 ORDERBYCLAUSE, COMMITWARNING, AD_PROCESS_ID+v_processOffset, PROCESSING, AD_IMAGE_ID, IMPORTFIELDS, 
 AD_COLUMNSORTORDER_ID+v_columnOffset, AD_COLUMNSORTYESNO_ID+v_columnOffset, ISSORTTAB, ENTITYTYPE, 
 INCLUDED_TAB_ID+v_tabOffset, FILTERCLAUSE 
 FROM TAD_AUX.AD_TAB WHERE AD_TABLE_ID BETWEEN p_tableIdFrom AND p_tableIdTo; 
 
 --ad_tab_trl 
 INSERT INTO AD_TAB_TRL (AD_TAB_ID, AD_LANGUAGE, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, 
 CREATEDBY, UPDATED, UPDATEDBY, NAME, DESCRIPTION, HELP, COMMITWARNING, ISTRANSLATED) 
 SELECT AD_TAB_ID+v_tabOffset,AD_LANGUAGE, 0, 0, ISACTIVE, now(), 0, now(), 
 0, NAME, DESCRIPTION, HELP, COMMITWARNING, ISTRANSLATED 
 FROM TAD_AUX.AD_TAB_TRL WHERE AD_TAB_ID IN ( 
   SELECT AD_TAB_ID FROM TAD_AUX.AD_TAB WHERE AD_TABLE_ID BETWEEN p_tableIdFrom AND p_tableIdTo); 
 
 --ad_window 
 INSERT INTO AD_WINDOW (AD_WINDOW_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY, 
 UPDATED, UPDATEDBY, NAME, DESCRIPTION, HELP, WINDOWTYPE, ISSOTRX, ENTITYTYPE, PROCESSING, 
 AD_IMAGE_ID, AD_COLOR_ID, ISDEFAULT) 
 SELECT AD_WINDOW_ID+v_windowOffset, 0, 0, ISACTIVE, now(), 0, now(), 0, 
 NAME, DESCRIPTION, HELP, WINDOWTYPE, ISSOTRX, ENTITYTYPE, PROCESSING, AD_IMAGE_ID, 
 AD_COLOR_ID, ISDEFAULT 
 FROM TAD_AUX.AD_WINDOW WHERE AD_WINDOW_ID BETWEEN p_windowIdFrom AND p_windowIdTo; 
 
 --ad_window_trl 
 INSERT INTO AD_WINDOW_TRL (AD_WINDOW_ID, AD_LANGUAGE, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, 
 CREATEDBY, UPDATED, UPDATEDBY, NAME, DESCRIPTION, HELP, ISTRANSLATED) 
 SELECT AD_WINDOW_ID+v_windowOffset, AD_LANGUAGE, 0, 0, ISACTIVE, now(), 0, now(), 0, 
 NAME, DESCRIPTION, HELP, ISTRANSLATED 
 FROM TAD_AUX.AD_WINDOW_TRL WHERE AD_WINDOW_ID BETWEEN p_windowIdFrom AND p_windowIdTo; 
 
 --ad_window_access 
 INSERT INTO AD_WINDOW_ACCESS (AD_WINDOW_ID, AD_ROLE_ID, AD_CLIENT_ID, AD_ORG_ID, 
 ISACTIVE, CREATED, CREATEDBY, UPDATED, UPDATEDBY, ISREADWRITE) 
 SELECT AD_WINDOW_ID+v_windowOffset, AD_ROLE_ID, 0, 0, 'Y', now(), 0, now(), 0, 'Y' 
 FROM TAD_AUX.AD_WINDOW_ACCESS WHERE AD_WINDOW_ID BETWEEN p_windowIdFrom AND p_windowIdTo; 
 
 --ad_auxiliarinput no esta hecho porque no hay ninguno en produccion 
 
 --ad_field 
 INSERT INTO AD_FIELD (AD_FIELD_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY, UPDATED, 
 UPDATEDBY, NAME, DESCRIPTION, HELP, ISCENTRALLYMAINTAINED, AD_TAB_ID, AD_COLUMN_ID, AD_FIELDGROUP_ID, 
 ISDISPLAYED, DISPLAYLOGIC, DISPLAYLENGTH, ISREADONLY, SEQNO, SORTNO, ISSAMELINE, ISHEADING, 
 ISFIELDONLY, ISENCRYPTED, ENTITYTYPE, SHOWINRELATION) 
 SELECT AD_FIELD_ID+v_fieldOffset, 0, 0, ISACTIVE, now(), 0, now(), 0, NAME, 
 DESCRIPTION, HELP, ISCENTRALLYMAINTAINED, AD_TAB_ID+v_tabOffset, AD_COLUMN_ID+v_columnOffset, 
 AD_FIELDGROUP_ID+v_fieldgroupOffset, ISDISPLAYED, DISPLAYLOGIC, DISPLAYLENGTH, ISREADONLY, 
 SEQNO, SORTNO, ISSAMELINE, ISHEADING, ISFIELDONLY, ISENCRYPTED, ENTITYTYPE, SHOWINRELATION 
 FROM TAD_AUX.AD_FIELD WHERE AD_TAB_ID IN ( 
   SELECT AD_TAB_ID FROM TAD_AUX.AD_TAB WHERE AD_TABLE_ID BETWEEN p_tableIdFrom AND p_tableIdTo); 
 
 --ad_field_trl 
 INSERT INTO AD_FIELD_TRL (AD_FIELD_ID, AD_LANGUAGE, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, 
 CREATEDBY, UPDATED, UPDATEDBY, NAME, DESCRIPTION, HELP, ISTRANSLATED) 
 SELECT AD_FIELD_ID+v_fieldOffset, AD_LANGUAGE, 0, 0, ISACTIVE, now(), 0, now(), 0, NAME, 
 DESCRIPTION, HELP, ISTRANSLATED 
 FROM TAD_AUX.AD_FIELD_TRL WHERE AD_FIELD_ID IN ( 
   SELECT AD_FIELD_ID FROM TAD_AUX.AD_FIELD 
   WHERE AD_TAB_ID IN ( 
       SELECT AD_TAB_ID FROM TAD_AUX.AD_TAB WHERE AD_TABLE_ID BETWEEN p_tableIdFrom AND p_tableIdTo)); 
 
 --ad_fieldgroup no hay en produccion 
 
 --ad_fieldgroup_trl no hay en produccion 
 
 --ad_element 
 INSERT INTO AD_ELEMENT (AD_ELEMENT_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY, 
 UPDATED, UPDATEDBY, COLUMNNAME, ENTITYTYPE, NAME, PRINTNAME, DESCRIPTION, HELP, PO_NAME, 
 PO_PRINTNAME, PO_DESCRIPTION, PO_HELP) 
 SELECT AD_ELEMENT_ID+v_elementOffset, 0, 0, ISACTIVE, now(), 0, now(), 0, COLUMNNAME, 
 ENTITYTYPE, NAME, PRINTNAME, DESCRIPTION, HELP, PO_NAME, PO_PRINTNAME, PO_DESCRIPTION, PO_HELP 
 FROM TAD_AUX.AD_ELEMENT WHERE AD_ELEMENT_ID BETWEEN p_elementIdFrom AND p_elementIdTo; 
 
 --ad_element_trl 
 INSERT INTO AD_ELEMENT_TRL (AD_ELEMENT_ID, AD_LANGUAGE, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, 
 CREATEDBY, UPDATED, UPDATEDBY, NAME, PRINTNAME, DESCRIPTION, HELP, PO_NAME, PO_PRINTNAME, 
 PO_DESCRIPTION, PO_HELP, ISTRANSLATED) 
 SELECT AD_ELEMENT_ID+v_elementOffset, AD_LANGUAGE, 0, 0, ISACTIVE, now(), 0, now(), 0, 
 NAME, PRINTNAME, DESCRIPTION, HELP, PO_NAME, PO_PRINTNAME, PO_DESCRIPTION, PO_HELP, ISTRANSLATED 
 FROM TAD_AUX.AD_ELEMENT_TRL WHERE AD_ELEMENT_ID BETWEEN p_elementIdFrom AND p_elementIdTo; 
 
 
 --ad_reference 
 INSERT INTO AD_REFERENCE (AD_REFERENCE_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY, 
 UPDATED, UPDATEDBY, NAME, DESCRIPTION, HELP, VALIDATIONTYPE, VFORMAT, ENTITYTYPE) 
 SELECT AD_REFERENCE_ID+v_referenceOffset, 0, 0, ISACTIVE, now(), 0, now(), 0, NAME, DESCRIPTION, 
 HELP, VALIDATIONTYPE, VFORMAT, ENTITYTYPE 
 FROM TAD_AUX.AD_REFERENCE WHERE AD_REFERENCE_ID BETWEEN p_referenceIdFrom AND p_referenceIdTo; 
 
 --ad_reference_trl 
 INSERT INTO AD_REFERENCE_TRL (AD_REFERENCE_ID, AD_LANGUAGE, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, 
 CREATED, CREATEDBY, UPDATED, UPDATEDBY, NAME, DESCRIPTION, HELP, ISTRANSLATED) 
 SELECT AD_REFERENCE_ID+v_referenceOffset, AD_LANGUAGE, 0, 0, ISACTIVE, now(), 0, now(), 0, 
 NAME, DESCRIPTION, HELP, ISTRANSLATED 
 FROM TAD_AUX.AD_REFERENCE_TRL WHERE AD_REFERENCE_ID BETWEEN p_referenceIdFrom AND p_referenceIdTo; 
 
 --ad_ref_table 
 INSERT INTO AD_REF_TABLE (AD_REFERENCE_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY, 
 UPDATED, UPDATEDBY, AD_TABLE_ID, AD_KEY, AD_DISPLAY, ISVALUEDISPLAYED, WHERECLAUSE, ORDERBYCLAUSE, 
 ENTITYTYPE) 
 SELECT AD_REFERENCE_ID+v_referenceOffset, 0, 0, ISACTIVE, now(), 0, now(), 0, 
 AD_TABLE_ID+v_tableOffset, CASE WHEN AD_KEY>699999 THEN AD_KEY+v_columnOffset ELSE AD_KEY END, 
 CASE WHEN AD_DISPLAY>699999 THEN AD_DISPLAY+v_columnOffset ELSE AD_DISPLAY END, 
 ISVALUEDISPLAYED, WHERECLAUSE, ORDERBYCLAUSE, ENTITYTYPE 
 FROM TAD_AUX.AD_REF_TABLE WHERE AD_REFERENCE_ID BETWEEN p_referenceIdFrom AND p_referenceIdTo; 
 
 --ad_ref_list 
 INSERT INTO AD_REF_LIST (AD_REF_LIST_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY, 
 UPDATED, UPDATEDBY, VALUE, NAME, DESCRIPTION, AD_REFERENCE_ID, VALIDFROM, VALIDTO, ENTITYTYPE) 
 SELECT AD_REF_LIST_ID+v_reflistOffset, 0, 0, ISACTIVE, now(), 0, now(), 0, VALUE, NAME, 
 DESCRIPTION, AD_REFERENCE_ID+v_referenceOffset, VALIDFROM, VALIDTO, ENTITYTYPE 
 FROM TAD_AUX.AD_REF_LIST WHERE AD_REFERENCE_ID BETWEEN p_referenceIdFrom AND p_referenceIdTo; 
 
 --ad_ref_list_trl 
 INSERT INTO AD_REF_LIST_TRL (AD_REF_LIST_ID, AD_LANGUAGE, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, 
 CREATED, CREATEDBY, UPDATED, UPDATEDBY, NAME, DESCRIPTION, ISTRANSLATED) 
 SELECT AD_REF_LIST_ID+v_reflistOffset, AD_LANGUAGE, 0, 0, ISACTIVE, now(), 0, now(), 0, 
 NAME, DESCRIPTION, ISTRANSLATED 
 FROM TAD_AUX.AD_REF_LIST_TRL WHERE AD_REF_LIST_ID IN ( 
   SELECT AD_REF_LIST_ID FROM TAD_AUX.AD_REF_LIST 
   WHERE AD_REFERENCE_ID BETWEEN p_referenceIdFrom AND p_referenceIdTo); 
 
 
 --ad_menu 
 INSERT INTO AD_MENU (AD_MENU_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY, UPDATED, 
 NAME, UPDATEDBY, DESCRIPTION, ISSUMMARY, ISSOTRX, ISREADONLY, ACTION, AD_WINDOW_ID, AD_WORKFLOW_ID, 
 AD_TASK_ID, AD_PROCESS_ID, AD_FORM_ID, AD_WORKBENCH_ID, ENTITYTYPE) 
 SELECT AD_MENU_ID+v_menuOffset, 0, 0, ISACTIVE, now(), 0, now(), NAME, UPDATEDBY, DESCRIPTION, 
 ISSUMMARY, ISSOTRX, ISREADONLY, ACTION, AD_WINDOW_ID+v_windowOffset, AD_WORKFLOW_ID+v_workflowOffset, 
 AD_TASK_ID+v_taskOffset, AD_PROCESS_ID+v_processOffset, AD_FORM_ID+v_formOffset, AD_WORKBENCH_ID, 
 ENTITYTYPE 
 FROM TAD_AUX.AD_MENU WHERE AD_MENU_ID BETWEEN p_menuIdFrom AND p_menuIdTo; 
 
 --ad_menu_trl 
 INSERT INTO AD_MENU_TRL (AD_MENU_ID, AD_LANGUAGE, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, 
 CREATEDBY, UPDATED, UPDATEDBY, NAME, DESCRIPTION, ISTRANSLATED) 
 SELECT AD_MENU_ID+v_menuOffset, AD_LANGUAGE, 0, 0, ISACTIVE, now(), 0, now(), 0, NAME, 
 DESCRIPTION, ISTRANSLATED 
 FROM TAD_AUX.AD_MENU_TRL WHERE AD_MENU_ID BETWEEN p_menuIdFrom AND p_menuIdTo; 
 
 --ad_treenode 
 INSERT INTO AD_TREENODE (AD_TREE_ID, NODE_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, 
 CREATEDBY, UPDATED, UPDATEDBY, PARENT_ID, SEQNO) 
 SELECT AD_TREE_ID, NODE_ID+v_menuOffset, 0, 0, ISACTIVE, now(), 0, now(), 0, 
 CASE WHEN PARENT_ID>699999 THEN PARENT_ID+v_menuOffset ELSE PARENT_ID END, SEQNO 
 FROM TAD_AUX.AD_TREENODE WHERE NODE_ID BETWEEN p_menuIdFrom AND p_menuIdTo; 
 
 --ad_val_rule 
 INSERT INTO AD_VAL_RULE (AD_VAL_RULE_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY, 
 UPDATED, UPDATEDBY, NAME, DESCRIPTION, TYPE, CODE, ENTITYTYPE) 
 SELECT AD_VAL_RULE_ID+v_valruleOffset, 0, 0, ISACTIVE, now(), 0, now(), 0, NAME, 
 DESCRIPTION, TYPE, CODE, ENTITYTYPE 
 FROM TAD_AUX.AD_VAL_RULE WHERE AD_VAL_RULE_ID BETWEEN p_valruleIdFrom AND p_valruleIdTo; 
 
 
 
--  por si falla lo del nulo!!!! 
-- (CASE WHEN INCLUDED_TAB_ID IS  NULL THEN  NULL ELSE  INCLUDED_TAB_ID+v_tabOffset END) 
 
 
 
 --AD_Table. No inhabilitamos el trigger para que inserte valores en ad_sequence 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TABLE ENABLE CONSTRAINT AD_WINDOW_TABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TABLE ENABLE CONSTRAINT AD_VALRULE_TABLE'); 
 --AD_Column. No tiene trigger para insert 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_COLUMN ENABLE CONSTRAINT ADPROCESS_ADCOLUMN'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_COLUMN ENABLE CONSTRAINT AD_ELEMENT_AD_COLUMN'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_COLUMN ENABLE CONSTRAINT AD_REFERENCE_COLUMNDATATYPE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_COLUMN ENABLE CONSTRAINT AD_REFERENCE_COLUMNVALUE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_COLUMN ENABLE CONSTRAINT AD_TABLE_COLUMN'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_COLUMN ENABLE CONSTRAINT AD_VALRULE_COLUMN'); 
 --AD_Tab. Inhabilitamos trigger para que no inserte en ad_tab_trl 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_TAB_TRG ENABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB ENABLE CONSTRAINT ADCOLUMN_ADTABSORTORDER'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB ENABLE CONSTRAINT ADCOLUMN_ADTABSORTYESNO'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB ENABLE CONSTRAINT ADPROCESS_ADTAB'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB ENABLE CONSTRAINT ADTAB_INCLUDED'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB ENABLE CONSTRAINT AD_COLUMN_AD_TAB'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB ENABLE CONSTRAINT AD_TABLE_TAB'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB ENABLE CONSTRAINT AD_WINDOW_TAB'); 
 --AD_Window. Constraints no necesita. Triggers si. Habra que insertar a mano en la window_access!!! 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_WINDOW_TRG ENABLE'); 
 --AD_Window_Access 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_WINDOW_ACCESS ENABLE CONSTRAINT ADWINDOW_ADWINDOWACCESS'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_WINDOW_ACCESS ENABLE CONSTRAINT ADROLE_ADWINDOWACCESS'); 
 --AD_Field 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_FIELD_TRG ENABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_FIELD ENABLE CONSTRAINT ADFIELDGROUP_ADFIELD'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_FIELD ENABLE CONSTRAINT AD_COLUMN_FIELD'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_FIELD ENABLE CONSTRAINT AD_TAB_FIELD'); 
 --AD_FieldGroup no necesita. Triggers si 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_FIELDGROUP_TRG ENABLE'); 
 --AD_Reference no necesita. Triggers si 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_REFERENCE_TRG ENABLE'); 
 --AD_Ref_List 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_REF_LIST_TRG ENABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_REF_LIST ENABLE CONSTRAINT AD_REFERENCE_REFLIST'); 
 --AD_Ref_Table 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_REF_TABLE ENABLE CONSTRAINT ADD_TABLE_REFTABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_REF_TABLE ENABLE CONSTRAINT AD_COLUMN_REFTABLE_DISPLAY'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_REF_TABLE ENABLE CONSTRAINT AD_COLUMN_REFTABLE_ID'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_REF_TABLE ENABLE CONSTRAINT AD_REFERENCE_REFTABLE'); 
 --AD_Menu 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_MENU_TRG ENABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_MENU ENABLE CONSTRAINT ADFORM_ADMENU'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_MENU ENABLE CONSTRAINT ADPROCESS_ADMENU'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_MENU ENABLE CONSTRAINT ADTASK_ADMENU'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_MENU ENABLE CONSTRAINT ADWINDOW_ADMENU'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_MENU ENABLE CONSTRAINT ADWORKFLOW_ADMENU'); 
 --AD_Treenode 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TREENODE ENABLE CONSTRAINT ADTREE_ADTREENODE'); 
 --AD_Element 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_ELEMENT_TRG ENABLE'); 
 --AD_Tab_Trl 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_TAB_TRL ENABLE CONSTRAINT AD_TABTRL'); 
 --AD_Window_Trl 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_WINDOW_TRL ENABLE CONSTRAINT AD_WINDOWTRL'); 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_WINDOW_TRL_TRG ENABLE'); 
 --AD_Field_Trl 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_FIELD_TRL ENABLE CONSTRAINT AD_FIELDTRL'); 
 --AD_FieldGroup_Trl 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_FIELDGROUP_TRL ENABLE CONSTRAINT ADFIELDGROUP_TRL'); 
 --AD_Ref_List_Trl 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_REF_LIST_TRL ENABLE CONSTRAINT AD_REFLISTTRL'); 
 --AD_Element_Trl 
 EXECUTE IMMEDIATE ('ALTER TRIGGER AD_ELEMENT_TRL_TRG ENABLE'); 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_ELEMENT_TRL ENABLE CONSTRAINT ADELEMENT_ADELEMENTTRL'); 
 --AD_Menu_Trl 
 EXECUTE IMMEDIATE ('ALTER TABLE AD_MENU_TRL ENABLE CONSTRAINT AD_MENUTRL'); 
 
 
 --Se ejecuta el proceso AD_UPDATE_SEQUENCE 
 --AD_UPDATE_SEQUENCE(p_baseinstalation);  --mirar 
END AD_APPLICATION_IMPORT
]]></body>
    </function>
  </database>
