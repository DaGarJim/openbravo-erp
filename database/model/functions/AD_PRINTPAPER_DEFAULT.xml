<?xml version="1.0"?>
  <database name="FUNCTION AD_PRINTPAPER_DEFAULT">
    <function name="AD_PRINTPAPER_DEFAULT" type="NULL">
      <parameter name="p_AD_PInstance_ID" type="NUMERIC" mode="in"/>
      <body>
  /*************************************************************************
  * The contents of this file are subject to the Compiere License
  * Version 2.5.0 ("License"); You may not use this file except in
  * compliance with the License. You may obtain a copy of the License at
  * http://www.compiere.org/license.html
  * Software distributed under the License is distributed on an
  * "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  * implied. See the License for the specific language governing rights
  * and limitations under the License.
  * The Original Code is  Compiere  ERP &amp;  Business Solution
  * The Initial Developer of the Original Code is Jorg Janke  and ComPiere,
  Inc.
  * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke,
  * parts created by ComPiere are Copyright (C) ComPiere, Inc.;
  * All Rights Reserved.
  * Contributor(s): Openbravo SL
  * Contributions are Copyright (C) 1999-2005 Openbravo, S.L
  *************************************************************************
  * $Id: AD_PrintPaper_Default.sql,v 1.1 2002/09/15 01:06:47 jjanke Exp $
  ***
  * Title: Set Current Format as Default
  * Description:
  ************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID NUMBER;
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    -- Parameter Variables
    p_AD_Client_ID NUMBER:=NULL;
    rowcount NUMBER;
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_AD_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_AD_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID, p.ParameterName, p.P_String, p.P_Number, p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_AD_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      IF(Cur_Parameter.ParameterName='AD_Client_ID') THEN
        p_AD_Client_ID:=Cur_Parameter.P_Number;
        DBMS_OUTPUT.PUT_LINE('  AD_Client_ID=' || p_AD_Client_ID) ;
      ELSE
        DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
      END IF;
    END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
    v_ResultStr:='Updating';
    UPDATE AD_PrintFormat
      SET AD_PrintPaper_ID=v_Record_ID
    WHERE(AD_Client_ID=p_AD_Client_ID OR p_AD_Client_ID IS NULL) AND EXISTS
      (SELECT *
      FROM AD_PrintPaper pp
      WHERE AD_PrintFormat.AD_PrintPaper_ID=pp.AD_PrintPaper_ID  AND IsLandscape=
        (SELECT IsLandscape FROM AD_PrintPaper  WHERE AD_PrintPaper_ID=v_Record_ID)
      )
      ;
    rowcount:=SQL%ROWCOUNT;
    v_Message:='@Copied@=' || rowcount;
    --&lt;&lt;FINISH_PROCESS&gt;&gt;
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_AD_PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  AD_UPDATE_PINSTANCE(p_AD_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END AD_PrintPaper_Default
</body>
    </function>
  </database>
