<?xml version="1.0"?>
  <database name="TRIGGER C_INVOICELINE_TRG3">
    <trigger name="C_INVOICELINE_TRG3" table="C_INVOICELINE" fires="after" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[
--Invoice
vwithholdingtotal NUMBER;
vBusPartId NUMBER;
vIsSalesInvoice CHAR(1);
vProcessed  CHAR(1);
--InvoiceLine 
v_invoiceid NUMBER;
vexcludeforwh CHAR(1);
vlinebaseamountnew NUMBER;
vlinebaseamountold NUMBER;
-- BP_Withholding
isbaseamountpercent CHAR(1);
baseamountpercent NUMBER;
includetaxinps CHAR(1);
taxinps_id NUMBER;
-- Tax 
vTaxAmount  NUMBER;
-- Withholding
withpercent NUMBER;
--Calculated Variable 
vwithholdingnew NUMBER;
vwithholdingold NUMBER;
taxamountwith  NUMBER;
vwithholdingtax NUMBER;
vwithid NUMBER;
BEGIN
  IF(INSERTING) THEN
    v_invoiceid := :NEW.c_invoice_id;
    vexcludeforwh := :NEW.excludeforwithholding;
    vlinebaseamountnew := :NEW.linenetamt;
    vlinebaseamountold := 0;
    
    ELSIF(UPDATING) THEN
      v_invoiceid := :NEW.c_invoice_id;
      vexcludeforwh := :NEW.excludeforwithholding;
      vlinebaseamountnew := :NEW.linenetamt;
      vlinebaseamountold := :OLD.linenetamt;
      
      ELSIF(DELETING) THEN
        v_invoiceid := :OLD.c_invoice_id;
        vexcludeforwh := :OLD.excludeforwithholding;
        vlinebaseamountnew := 0;
        vlinebaseamountold := :OLD.linenetamt;
        
      END IF;

      -- If The lines is excluded for calculate the witholding --> exit 
      IF vexcludeforwh = 'Y' THEN
        return;
      END IF;

      SELECT COALESCE(withholdingamount,   0), c_bpartner_id, IsSOTrx , coalesce(processed,'N') ,c_withholding_id
      INTO vwithholdingtotal,vBusPartId, vIsSalesInvoice, vProcessed  ,vwithid
      FROM c_invoice
      WHERE c_invoice_id = v_invoiceid;

      -- Se the invoice isn't purchase exit from trigger
      if (vIsSalesInvoice <> 'N') then
        return;
      end if; 
    
    BEGIN
      select bpwh.is_percent_wh, bpwh.wh_percent, bpwh.include_tax, bpwh.c_tax_id,wh.rate
	into isbaseamountpercent, baseamountpercent,  includetaxinps, taxinps_id,withpercent
        from c_bp_withholding bpwh, c_withholding wh
       where bpwh.c_bpartner_id = vBusPartId 
       and bpwh.c_withholding_id = wh.c_withholding_id 
       and bpwh.c_withholding_id = vwithid;

    EXCEPTION 
    When NO_DATA_FOUND THEN
      return;
    end;
      
   -- ReadOnly Check    
  IF (vProcessed = 'N') THEN
  
      IF(isbaseamountpercent <> 'Y') THEN
        baseamountpercent := 100;
      END IF;
      -- New WithHolding For LineAmount
      vlinebaseamountnew := vlinebaseamountnew *baseamountpercent / 100;
      vwithholdingnew :=(withpercent * vlinebaseamountnew) / 100;
      -- Old WithHolding For LineAmount
      vlinebaseamountold := vlinebaseamountold *baseamountpercent / 100;
      vwithholdingold :=(withpercent *vlinebaseamountold) / 100;


      -- WithHolding Tax  
      vTaxAmount := 0;
      IF (includetaxinps = 'Y') THEN
       select coalesce(sum(taxamt),0) into vTaxAmount
        from c_invoicetax invtax , c_tax tax 
       where tax.c_tax_id = invtax.c_tax_id
        and tax.is_withholdingtax='Y'
        and invtax.c_invoice_id = v_invoiceid
        and tax.c_tax_id=taxinps_id;
      END IF;
      
      taxamountwith := baseamountpercent * (vTaxAmount)/100;
      vwithholdingtax :=  withpercent*taxamountwith/100 ;

      -- Update WITHHOLDINGAMOUNT della c_invoice = totale+(new valore wh of line) -(old valore wh of line)
      vwithholdingtotal := vwithholdingtotal + vwithholdingnew -vwithholdingold+ vwithholdingtax;

      UPDATE c_invoice
      SET withholdingamount = vwithholdingtotal,
      inpsamt=vTaxAmount
      WHERE c_invoice_id = v_invoiceid;
  END IF;
  
END C_INVOICELINE_TRG3

]]></body>
    </trigger>
  </database>
