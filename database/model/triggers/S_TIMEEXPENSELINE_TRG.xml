<?xml version="1.0"?>
  <database name="TRIGGER S_TIMEEXPENSELINE_TRG">
    <trigger name="S_TIMEEXPENSELINE_TRG" table="S_TIMEEXPENSELINE" fires="before" insert="true" update="true" delete="true" foreach="row">
      <body>


  v_UOM_ID NUMBER(10) ;
  v_TimeExpense_ID NUMBER;
  v_RO NUMBER;
BEGIN
  IF (INSERTING OR UPDATING) THEN
    v_TimeExpense_ID := :NEW.S_TIMEEXPENSE_ID;
  ELSE
    v_TimeExpense_ID := :OLD.S_TIMEEXPENSE_ID;
  END IF;
   -- ReadOnly Check
  -- Added in order to fix bug 1798120
   IF (UPDATING) THEN
  IF ((:OLD.C_INVOICELINE_ID IS NOT NULL OR :NEW.C_INVOICELINE_ID IS NULL) AND (:OLD.C_ORDERLINE_ID IS NOT NULL OR :NEW.C_ORDERLINE_ID IS NULL)) THEN
    SELECT  COUNT(*)
     INTO v_RO
    FROM S_TIMEEXPENSE
    WHERE S_TIMEEXPENSE_ID=v_TimeExpense_ID
      AND Processed='Y';
    IF (v_RO &gt; 0) THEN
      IF (INSERTING OR DELETING) THEN
        RAISE_APPLICATION_ERROR(-20501, 'Document processed/posted');
      ELSIF (:NEW.Line&lt;&gt;:OLD.Line
            OR :NEW.IsTimeReport&lt;&gt;:OLD.IsTimeReport
            OR :NEW.ISInvoiced&lt;&gt;:OLD.ISInvoiced
     OR :NEW.S_TimeExpense_ID&lt;&gt;:OLD.S_TimeExpense_ID
     OR :NEW.AD_ORG_ID&lt;&gt;:OLD.AD_ORG_ID
     OR COALESCE(:NEW.DateExpense, '1-1-3000')&lt;&gt;COALESCE(:OLD.DateExpense,'1-1-3000')
     OR COALESCE(:NEW.M_Product_ID,0)&lt;&gt;COALESCE(:OLD.M_Product_ID,0)
     OR COALESCE(:NEW.qty,0)&lt;&gt;COALESCE(:OLD.qty,0)
     OR COALESCE(:NEW.expenseamt,0)&lt;&gt;COALESCE(:OLD.expenseamt,0)
     OR COALESCE(:NEW.C_Currency_ID,0)&lt;&gt;COALESCE(:OLD.C_Currency_ID,0)
     OR COALESCE(:NEW.S_Resourceassignment_ID,0)&lt;&gt;COALESCE(:OLD.S_Resourceassignment_ID,0)
     OR COALESCE(:NEW.C_BPartner_ID,0)&lt;&gt;COALESCE(:OLD.C_BPartner_ID,0)
     OR COALESCE(:NEW.C_Project_ID,0)&lt;&gt;COALESCE(:OLD.C_Project_ID,0)
     OR COALESCE(:NEW.C_Activity_ID,0)&lt;&gt;COALESCE(:OLD.C_Activity_ID,0)
     OR COALESCE(:NEW.C_Campaign_ID,0)&lt;&gt;COALESCE(:OLD.C_Campaign_ID,0)
     OR COALESCE(:NEW.C_InvoiceLine_ID,0)&lt;&gt;COALESCE(:OLD.C_InvoiceLine_ID,0)
     OR COALESCE(:NEW.InvoicePrice,0)&lt;&gt;COALESCE(:OLD.InvoicePrice,0)
     OR COALESCE(:NEW.C_Uom_ID,0)&lt;&gt;COALESCE(:OLD.C_Uom_ID,0)
     OR COALESCE(:NEW.C_OrderLine_ID,0)&lt;&gt;COALESCE(:OLD.C_OrderLine_ID,0)
     OR COALESCE(:NEW.C_ProjectPhase_ID,0)&lt;&gt;COALESCE(:OLD.C_ProjectPhase_ID,0)
     OR COALESCE(:NEW.C_ProjectTask_ID,0)&lt;&gt;COALESCE(:OLD.C_ProjectTask_ID,0)
     OR COALESCE(:NEW.S_TimeType_ID,0)&lt;&gt;COALESCE(:OLD.S_TimeType_ID,0)) THEN
        RAISE_APPLICATION_ERROR(-20501, 'Document processed/posted');
      END IF;
    END IF;

    -- Differnce, ID
    IF(UPDATING OR INSERTING) THEN
      IF(:NEW.M_PRODUCT_ID IS NOT NULL) THEN
        SELECT C_UOM_ID
        INTO v_UOM_ID
        FROM M_PRODUCT
        WHERE M_PRODUCT_ID=:NEW.M_PRODUCT_ID;
        IF(COALESCE(v_UOM_ID, 0) &lt;&gt; COALESCE(:NEW.C_UOM_ID, 0)) THEN
          RAISE_APPLICATION_ERROR(-20111, 'Unit of Measure mismatch (product/transaction)') ;
        END IF;
      END IF;
    END IF;
  END IF;
 ELSE
   -- FOR INSERT AND DELETE
   SELECT  COUNT(*)
     INTO v_RO
   FROM S_TIMEEXPENSE
   WHERE S_TIMEEXPENSE_ID=v_TimeExpense_ID
     AND Processed='Y';
   IF (v_RO &gt; 0) THEN
     IF (INSERTING OR DELETING) THEN
       RAISE_APPLICATION_ERROR(-20501, 'Document processed/posted');
     ELSIF (:NEW.Line&lt;&gt;:OLD.Line
           OR :NEW.IsTimeReport&lt;&gt;:OLD.IsTimeReport
           OR :NEW.ISInvoiced&lt;&gt;:OLD.ISInvoiced
    OR :NEW.S_TimeExpense_ID&lt;&gt;:OLD.S_TimeExpense_ID
    OR :NEW.AD_ORG_ID&lt;&gt;:OLD.AD_ORG_ID
    OR COALESCE(:NEW.DateExpense, '1-1-3000')&lt;&gt;COALESCE(:OLD.DateExpense,'1-1-3000')
    OR COALESCE(:NEW.M_Product_ID,0)&lt;&gt;COALESCE(:OLD.M_Product_ID,0)
    OR COALESCE(:NEW.qty,0)&lt;&gt;COALESCE(:OLD.qty,0)
    OR COALESCE(:NEW.expenseamt,0)&lt;&gt;COALESCE(:OLD.expenseamt,0)
    OR COALESCE(:NEW.C_Currency_ID,0)&lt;&gt;COALESCE(:OLD.C_Currency_ID,0)
    OR COALESCE(:NEW.S_Resourceassignment_ID,0)&lt;&gt;COALESCE(:OLD.S_Resourceassignment_ID,0)
    OR COALESCE(:NEW.C_BPartner_ID,0)&lt;&gt;COALESCE(:OLD.C_BPartner_ID,0)
    OR COALESCE(:NEW.C_Project_ID,0)&lt;&gt;COALESCE(:OLD.C_Project_ID,0)
    OR COALESCE(:NEW.C_Activity_ID,0)&lt;&gt;COALESCE(:OLD.C_Activity_ID,0)
    OR COALESCE(:NEW.C_Campaign_ID,0)&lt;&gt;COALESCE(:OLD.C_Campaign_ID,0)
    OR COALESCE(:NEW.C_InvoiceLine_ID,0)&lt;&gt;COALESCE(:OLD.C_InvoiceLine_ID,0)
    OR COALESCE(:NEW.InvoicePrice,0)&lt;&gt;COALESCE(:OLD.InvoicePrice,0)
    OR COALESCE(:NEW.C_Uom_ID,0)&lt;&gt;COALESCE(:OLD.C_Uom_ID,0)
    OR COALESCE(:NEW.C_OrderLine_ID,0)&lt;&gt;COALESCE(:OLD.C_OrderLine_ID,0)
    OR COALESCE(:NEW.C_ProjectPhase_ID,0)&lt;&gt;COALESCE(:OLD.C_ProjectPhase_ID,0)
    OR COALESCE(:NEW.C_ProjectTask_ID,0)&lt;&gt;COALESCE(:OLD.C_ProjectTask_ID,0)
    OR COALESCE(:NEW.S_TimeType_ID,0)&lt;&gt;COALESCE(:OLD.S_TimeType_ID,0)) THEN
       RAISE_APPLICATION_ERROR(-20501, 'Document processed/posted');
     END IF;
   END IF;

  -- Differnce, ID
   IF(UPDATING OR INSERTING) THEN
     IF(:NEW.M_PRODUCT_ID IS NOT NULL) THEN
       SELECT C_UOM_ID
       INTO v_UOM_ID
       FROM M_PRODUCT
       WHERE M_PRODUCT_ID=:NEW.M_PRODUCT_ID;
       IF(COALESCE(v_UOM_ID, 0) &lt;&gt; COALESCE(:NEW.C_UOM_ID, 0)) THEN
         RAISE_APPLICATION_ERROR(-20111, 'Unit of Measure mismatch (product/transaction)') ;
       END IF;
     END IF;
   END IF;
  
 END IF;
END S_TimeExpenseLine_Trg 
</body>
    </trigger>
  </database>
