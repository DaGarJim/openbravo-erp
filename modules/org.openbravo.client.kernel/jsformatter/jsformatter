#!/bin/bash
# *************************************************************************
# * The contents of this file are subject to the Openbravo  Public  License
# * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
# * Version 1.1  with a permitted attribution clause; you may not  use this
# * file except in compliance with the License. You  may  obtain  a copy of
# * the License at http://www.openbravo.com/legal/license.html
# * Software distributed under the License  is  distributed  on  an "AS IS"
# * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# * License for the specific  language  governing  rights  and  limitations
# * under the License.
# * The Original Code is Openbravo ERP.
# * The Initial Developer of the Original Code is Openbravo SLU
# * All portions are Copyright (C) 2019 Openbravo SLU
# * All Rights Reserved.
# * Contributor(s):  ______________________________________.
# ************************************************************************
#
#set -e

SCRIPT_NAME=$(basename "$0")
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
VERBOSE=false
WRITE=false

function usage() {
  echo -n "Usage: ${SCRIPT_NAME} [-h][-v][-w] [FILE ...]

Utility to pass the Javascript Formatter to the given files, or all files from the current directory if none given.
With no arguments, scan all files starting from the current directory taking into account .jsexclude files.
(see jsfiles for further explanation)

 Options:
  -h                Display this help and exit
  -v                Verbose mode. Shows additional output
  -w                Write mode. Show formatting issues and overwrites the files with the fixes

"
}

#
# Execute the Linter splitting the list of files in chunks of max 250 arguments. This is done because "npm run" argument
# size limit is much lower than the one in bash commands.
#
function formatFiles {
    if [[ ${VERBOSE} == true ]]; then
        echo "Checking the following files: $@"
    else
        echo "Checking $# files"
    fi

    for file in "$@"; do
        runFormatter "${file}"
    done
}

# TODO: When this issue is closed, replace with --list-different: https://github.com/prettier/prettier/issues/4612
function runFormatter {
    file=$1
    npm run jsformatter --prefix ${KERNEL_MODULE_PATH} -s -- ${file} > "${file}.prettier"
    if ! diff -u "${file}" "${file}.prettier"; then
        if [[ ${WRITE} == false ]] ; then
            echo ""
            echo "*****************************************************************************************************"
            echo "Lines not properly formatted found."
            echo "Please, format ${file}"
            echo "*****************************************************************************************************"
            echo ""
            rm -rf "${file}.prettier"
            exit 1
        else
            cat "${file}.prettier" > "${file}"
            echo "File formatted: ${file}";
        fi
    fi

    if [[ -n "${file}" ]]; then
        rm -rf "${file}.prettier"
    fi
}

#
# Assuming the received argument is a list of files, it will check whether the paths are absolute or relative. In case
# the path is relative, it will be converted to absolute.
#
function convertFiles {
    for arg in "$@"; do
        if [[ "${arg:0:1}" = "/" ]]; then
            echo "${arg} "
        else
            echo "$(pwd)/${arg} "
        fi
    done
}

#Parse input arguments
while getopts ":hvw" arg; do
    case ${arg} in
        h )
            usage
            exit 0
        ;;
        v )
            VERBOSE=true
        ;;
        w )
            WRITE=true
        ;;
        \? )
            echo "Invalid option: -$OPTARG" >&2
            usage
            exit 1
        ;;
    esac
done
shift $((OPTIND-1))

KERNEL_MODULE_PATH="."
SCAN_BASE_PATH=""
if [[ -d "../../modules" ]]; then
    # Running from module
    KERNEL_MODULE_PATH="../org.openbravo.client.kernel"
    SCAN_BASE_PATH="$(pwd)"
elif [[ -d "./modules" ]]; then
    # Running from Openbravo root
    KERNEL_MODULE_PATH="./modules/org.openbravo.client.kernel"
    SCAN_BASE_PATH="$(pwd)/modules"
else
    echo -e "\n\033[0;31mError:\033[0m \"$(pwd)\" is not a valid path to run the linter"
    echo "Scan either from the Openbravo or a module root directory"
    exit 1
fi

source ${SCRIPT_DIR}/../jsutils/check-npm-deps

if [[ $# > 0 ]]; then
    files=$(convertFiles $@)
    formatFiles ${files}
else
    files=$(${KERNEL_MODULE_PATH}/jsutils/jsfiles ${SCAN_BASE_PATH})
    formatFiles ${files}
fi
