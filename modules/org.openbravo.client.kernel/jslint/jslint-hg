#!/bin/bash
# *************************************************************************
# * The contents of this file are subject to the Openbravo  Public  License
# * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
# * Version 1.1  with a permitted attribution clause; you may not  use this
# * file except in compliance with the License. You  may  obtain  a copy of
# * the License at http://www.openbravo.com/legal/license.html
# * Software distributed under the License  is  distributed  on  an "AS IS"
# * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# * License for the specific  language  governing  rights  and  limitations
# * under the License.
# * The Original Code is Openbravo ERP.
# * The Initial Developer of the Original Code is Openbravo SLU
# * All portions are Copyright (C) 2019 Openbravo SLU
# * All Rights Reserved.
# * Contributor(s):  ______________________________________.
# ************************************************************************

#
# Mercurial pretxncommit hook to check linting in js code
#
KERNEL_MODULE_PATH="."
IS_A_MODULE=false
if [[ -d "../../modules" ]]; then
    # Running from module
    KERNEL_MODULE_PATH="../org.openbravo.client.kernel"
    IS_A_MODULE=true
elif [[ -d "./modules" ]]; then
    # Running from Openbravo root
    KERNEL_MODULE_PATH="./modules/org.openbravo.client.kernel"
else
    echo -e "\n\033[0;31mError:\033[0m \"$(pwd)\" is not a valid path to run the linter"
    echo "Scan either from the Openbravo or a module root directory"
    exit 1
fi

echo "Performing jslint check on modified js resources"
FILES=()
for i in $(hg log -r $HG_NODE --template '{files}')
do
  printf "Checking ${i}\n"
  if [[ -f "${i}" ]]; then
    if [[ "${IS_A_MODULE}" == true && -n "$(echo $i | awk '/.js$/')" || \
          "${IS_A_MODULE}" == false && -n "$(echo $i | awk '/.js$/ && ! /^web/')" ]]; then
        FILES+=("$(pwd)/${i}")
    fi
  fi
done

if [[ -n "${FILES[*]}" ]]; then
    ${KERNEL_MODULE_PATH}/jslint/jslint ${FILES[*]} || exit 1
fi

exit 0
