<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html 
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SLU 
 * All portions are Copyright (C) 2009-2016 Openbravo SLU
 * All Rights Reserved. 
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->

<SqlClass name="ReportOrderNotShippedData" package="org.openbravo.reports.ordersawaitingdelivery.erpCommon.ad_reports">
  <SqlClassComment></SqlClassComment>
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[SELECT ORG.NAME AS ORGNAME, BP.NAME AS BPNAME, 
    O.DOCUMENTNO, O.POREFERENCE, TO_DATE(O.DATEORDERED) AS DATEORDERED, TO_DATE(O.DATEPROMISED) AS DATEPROMISED, 
    REFLISTV.NAME AS DELIVERYRULE, COALESCE(DLOC.NAME, BPADD.NAME) AS DELIVERYLOCATION,
    PR.NAME || ' ' || COALESCE(TO_CHAR(ASI.DESCRIPTION), '') AS PRODNAME, OL.M_ATTRIBUTESETINSTANCE_ID,
    OL.QTYORDERED || ' ' || COALESCE(TO_CHAR(UO.UOMSYMBOL), '') AS ORDEREDQTY, 
    (OL.QTYORDERED-OL.QTYDELIVERED) || ' ' || COALESCE(TO_CHAR(UO.UOMSYMBOL), '') AS PENDINGQTY, 
    (SELECT SUM(SD.QTYONHAND) FROM M_STORAGE_DETAIL SD
    WHERE OL.M_PRODUCT_ID = SD.M_PRODUCT_ID
    AND OL.C_UOM_ID = SD.C_UOM_ID
    AND COALESCE(OL.M_ATTRIBUTESETINSTANCE_ID, SD.M_ATTRIBUTESETINSTANCE_ID, '0') = COALESCE(SD.M_ATTRIBUTESETINSTANCE_ID, '0')
    AND COALESCE(OL.M_PRODUCT_UOM_ID, '-1') = COALESCE(SD.M_PRODUCT_UOM_ID,'-1')
    AND EXISTS (SELECT 1
    FROM M_LOCATOR LOC
    WHERE LOC.M_WAREHOUSE_ID = OL.M_WAREHOUSE_ID
    AND SD.M_LOCATOR_ID = LOC.M_LOCATOR_ID))|| ' ' || COALESCE(TO_CHAR(UO.UOMSYMBOL), '') AS QTYINSTOCK
    FROM C_ORDERLINE OL
    LEFT JOIN C_ORDER O ON O.C_ORDER_ID = OL.C_ORDER_ID
    LEFT JOIN AD_ORG ORG ON O.AD_ORG_ID = ORG.AD_ORG_ID
    LEFT JOIN C_BPARTNER BP ON O.C_BPARTNER_ID = BP.C_BPARTNER_ID
    LEFT JOIN C_BPARTNER_LOCATION BPADD ON O.C_BPARTNER_LOCATION_ID = BPADD.C_BPARTNER_LOCATION_ID
    LEFT JOIN M_PRODUCT PR ON OL.M_PRODUCT_ID = PR.M_PRODUCT_ID
    LEFT JOIN C_UOM UO ON OL.C_UOM_ID = UO.C_UOM_ID
    LEFT JOIN AD_REF_LIST_V REFLISTV
    ON REFLISTV.VALUE = O.DELIVERYRULE
    LEFT JOIN C_BPARTNER_LOCATION DLOC
    ON DLOC.C_BPARTNER_LOCATION_ID = O.DELIVERY_LOCATION_ID
    LEFT JOIN M_ATTRIBUTESETINSTANCE ASI
    ON OL.M_ATTRIBUTESETINSTANCE_ID = ASI.M_ATTRIBUTESETINSTANCE_ID
    WHERE O.DOCSTATUS = 'CO'
    AND O.ISSOTRX = 'Y'
    AND EXISTS (SELECT 1
    FROM C_ORDERLINE ORDL
    WHERE ORDL.C_ORDER_ID = O.C_ORDER_ID
    AND ORDL.QTYORDERED <> ORDL.QTYDELIVERED)
    AND REFLISTV.AD_REFERENCE_ID = '151'
    AND REFLISTV.AD_LANGUAGE = ?
    AND O.AD_CLIENT_ID IN ('1')
    AND O.AD_ORG_ID IN ('1')
    AND 1=1
    ORDER BY ORGNAME, BPNAME, DOCUMENTNO, PRODNAME]]></Sql>
    <Parameter name="adLanguage"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="O.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="O.AD_ORG_ID IN (" text="'1'"/>    
    <Parameter name="dateFrom" optional="true" after="1=1"><![CDATA[ AND O.DATEORDERED >= TO_DATE(?) ]]></Parameter>
    <Parameter name="dateTo" optional="true" after="1=1"><![CDATA[ AND O.DATEORDERED < TO_DATE(?) ]]></Parameter>
    <Parameter name="cBpartnerId" optional="true" after="1=1">AND O.C_BPARTNER_ID = ?</Parameter>
    <Parameter name="deliveryTerms" optional="true" after="1=1">AND O.DELIVERYRULE = ?</Parameter>
    <Parameter name="orderDocNo" optional="true" after="1=1">AND UPPER(O.DOCUMENTNO) LIKE '%'||UPPER(?)||'%'</Parameter>    
    <Parameter name="orderRef" optional="true" after="1=1">AND UPPER(O.POREFERENCE) LIKE '%'||UPPER(?)||'%'</Parameter>    
    <Parameter name="cOrgId" optional="true" after="1=1">AND O.AD_ORG_ID = ?</Parameter>    
  </SqlMethod>
  <SqlMethod name="bPartnerDescription" type="preparedStatement" return="String" default="">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    SELECT MAX(NAME) AS NAME FROM C_BPARTNER 
    WHERE C_BPARTNER_ID = ?
    </Sql>
    <Parameter name="cBpartnerId"/>
  </SqlMethod>
</SqlClass>
