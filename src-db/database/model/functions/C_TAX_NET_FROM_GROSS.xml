<?xml version="1.0"?>
  <database name="FUNCTION C_TAX_NET_FROM_GROSS">
    <function name="C_TAX_NET_FROM_GROSS" type="NUMERIC">
      <parameter name="p_tax_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_taxincludedamt" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_alternatetaxbaseamt" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_stdprecision" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_totaltaxamt" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_qty" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2012 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
-- Logistice
  v_ResultStr VARCHAR(2000):=''; 
  v_message VARCHAR2(2000):='';
  v_LineNetAmount NUMBER;

  v_UnitTax NUMBER;
  v_baseamount VARCHAR(60) ;
  v_rate NUMBER ; 
BEGIN --BODY

  SELECT baseamount, rate INTO v_baseamount, v_rate 
  FROM c_tax
  WHERE c_tax_id = p_tax_id;
  
  v_message := v_rate || ' ' || v_baseamount;
  DBMS_OUTPUT.PUT_LINE(v_message);
  IF ( v_baseamount = 'TBA' ) OR ( v_baseamount = 'TBATAX' ) THEN
    v_LineNetAmount := (p_taxincludedamt*p_qty - p_alternatetaxbaseamt*v_rate/100 )/p_qty ;
  ELSE
    v_UnitTax := c_tax_from_net_amt(p_tax_id, p_taxincludedamt,p_alternatetaxbaseamt , p_stdprecision , p_totaltaxamt  ) ;
    DBMS_OUTPUT.PUT_LINE('Unit tax ' || v_UnitTax);
    v_LineNetAmount:= Round (p_taxincludedamt*p_taxincludedamt  /(p_taxincludedamt+v_UnitTax),p_stdprecision ) ;
  END IF;

  RETURN v_LineNetAmount;

EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  RAISE;
END C_TAX_NET_FROM_GROSS
]]></body>
    </function>
  </database>
