<?xml version="1.0"?>
  <database name="FUNCTION AD_TAB_COPY">
    <function name="AD_TAB_COPY" type="NULL">
      <parameter name="p_pinstance_id" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
  * The contents of this file are subject to the Compiere Public
  * License 1.1 ("License"); You may not use this file except in
  * compliance with the License. You may obtain a copy of the License in
  * the legal folder of your Openbravo installation.

  * Software distributed under the License is distributed on an
  * "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  * implied. See the License for the specific language governing rights

  * and limitations under the License.
  * The Original Code is  Compiere  ERP \&  Business Solution
  * The Initial Developer of the Original Code is Jorg Janke and ComPiere, Inc.

  * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke,
  * parts created by ComPiere are Copyright (C) ComPiere, Inc.;
  * All Rights Reserved.
  * Contributor(s): Openbravo SL

  * Contributions are Copyright (C) 1999-2008 Openbravo, S.L
  *
  * Specifically, this derivative work is based upon the following Compiere
  * file and version.
  *************************************************************************
  * $Id: AD_Tab_Copy.sql,v 1.4 2003/02/20 06:42:12 jjanke Exp $
  ***
  * Title: Copy One Tab content (i.e. Fields) to another
  * Description:
  ************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID NUMBER;
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    -- Parameter Variables
    v_AD_Tab_ID NUMBER;
    v_NoOfFields NUMBER:=0;
    v_NextNo NUMBER;
    v_EntityType CHAR(1) ;
    -- Copy
    Cur_Fields RECORD;
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID, p.ParameterName, p.P_String, p.P_Number, p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      IF(Cur_Parameter.ParameterName='AD_Tab_ID') THEN
        v_AD_Tab_ID:=Cur_Parameter.P_Number;
        DBMS_OUTPUT.PUT_LINE('  AD_Tab_ID=' || v_AD_Tab_ID) ;
      ELSE
        DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
      END IF;
    END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
    v_ResultStr:='GetEntityType';
    SELECT EntityType  INTO v_EntityType  FROM AD_Tab  WHERE AD_Tab_ID=v_Record_ID;
    -- Record_ID is the Tab_ID to copy to
    v_ResultStr:='Copying';
    FOR Cur_Fields IN
      (SELECT *  FROM AD_Field  WHERE AD_Tab_ID=v_AD_Tab_ID)
    LOOP
      -- Get next no
      AD_Sequence_Next('AD_Field', Cur_Fields.AD_Client_ID, v_NextNo) ;
      -- Insert
      INSERT
      INTO AD_Field -- AD_Window_Copy has copied code
        (
          AD_Field_ID, AD_Tab_ID, AD_Client_ID, AD_Org_ID,
          IsActive, Created, CreatedBy, Updated,
          UpdatedBy, Name, Description, Help,
          IsCentrallyMaintained, AD_Column_ID, AD_FieldGroup_ID, ISDISPLAYED,
          DISPLAYLOGIC, DISPLAYLENGTH, ISREADONLY,
          SEQNO, SORTNO, ISSAMELINE, ISHEADING,
          ISFIELDONLY, ISENCRYPTED, EntityType
        )
        VALUES
        (v_NextNo, v_Record_ID, Cur_Fields.AD_Client_ID, Cur_Fields.AD_Org_ID,
        Cur_Fields.IsActive, now(), 0, now(),
        0, Cur_Fields.Name, Cur_Fields.Description, Cur_Fields.Help,
        Cur_Fields.IsCentrallyMaintained, Cur_Fields.AD_Column_ID, Cur_Fields.AD_FieldGroup_ID, Cur_Fields.ISDISPLAYED,
        Cur_Fields.DISPLAYLOGIC, Cur_Fields.DISPLAYLENGTH, Cur_Fields.ISREADONLY,
        Cur_Fields.SEQNO, Cur_Fields.SORTNO, Cur_Fields.ISSAMELINE, Cur_Fields.ISHEADING,
        Cur_Fields.ISFIELDONLY, Cur_Fields.ISENCRYPTED, v_EntityType) ;
      -- update translation
      UPDATE AD_Field_Trl
        SET Name=
        (SELECT Name
        FROM AD_Field_Trl s
        WHERE s.AD_Field_ID=Cur_Fields.AD_Field_ID  AND s.AD_Language=AD_Field_Trl.AD_Language
        )
        , Description=
        (SELECT Description
        FROM AD_Field_Trl s
        WHERE s.AD_Field_ID=Cur_Fields.AD_Field_ID  AND s.AD_Language=AD_Field_Trl.AD_Language
        )
        , Help=
        (SELECT Help
        FROM AD_Field_Trl s
        WHERE s.AD_Field_ID=Cur_Fields.AD_Field_ID  AND s.AD_Language=AD_Field_Trl.AD_Language
        )
      WHERE AD_Field_Trl.AD_Field_ID=v_NextNo;
      --
      v_NoOfFields:=v_NoOfFields + 1;
    END LOOP;
    v_Message:='@Copied@=' || v_NoOfFields;
    --<<FINISH_PROCESS>>
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END AD_TAB_COPY
]]></body>
    </function>
  </database>
