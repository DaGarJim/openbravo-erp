<?xml version="1.0"?>
  <database name="FUNCTION GET_PURCHASE_PRICE">
    <function name="GET_PURCHASE_PRICE" type="NUMERIC">
      <parameter name="p_product_id" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL
* All portions are Copyright (C) 2001-2006 Openbravo SL
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  v_Price NUMBER;
  TYPE RECORD IS REF CURSOR;
    Cur_Orderline RECORD;
    Cur_Invoiceline RECORD;
    Cur_Pricelist_Version RECORD;
  BEGIN
    FOR Cur_Invoiceline IN
      (SELECT COALESCE(C_INVOICELINE.PRICEACTUAL, 0) AS Price
      FROM C_INVOICELINE,
        C_INVOICE
      WHERE C_INVOICELINE.C_INVOICE_ID = C_INVOICE.C_INVOICE_ID
        AND C_INVOICE.ISSOTRX = 'N'
        AND C_INVOICE.DOCSTATUS = 'CO'
        AND C_INVOICE.PROCESSED = 'Y'
        AND C_INVOICELINE.M_PRODUCT_ID = p_Product_ID
      ORDER BY C_INVOICE.DATEINVOICED DESC
      )
    LOOP
      v_Price := Cur_Invoiceline.PRICE;
      EXIT;
    END LOOP;
    IF(v_Price IS NULL) THEN
      FOR Cur_Orderline IN
        (SELECT COALESCE(C_ORDERLINE.PRICEACTUAL, 0) AS Price
        FROM C_ORDERLINE,
          C_ORDER
        WHERE C_ORDERLINE.C_ORDER_ID = C_ORDER.C_ORDER_ID
          AND C_ORDER.ISSOTRX = 'N'
          AND C_ORDER.DOCSTATUS = 'CO'
          AND C_ORDER.PROCESSED = 'Y'
          AND C_ORDERLINE.M_PRODUCT_ID = p_Product_ID
        ORDER BY C_ORDER.DATEORDERED DESC
        )
      LOOP
        v_Price := Cur_Orderline.PRICE;
        EXIT;
      END LOOP;
    END IF;
    IF(v_Price IS NULL) THEN
      FOR Cur_Pricelist_Version IN
        (SELECT COALESCE(M_PRODUCTPRICE.PRICESTD, 0) AS Price
        FROM M_PRODUCTPRICE,
          M_PRICELIST_VERSION,
          M_PRICELIST
        WHERE M_PRODUCTPRICE.M_PRICELIST_VERSION_ID = M_PRICELIST_VERSION.M_PRICELIST_VERSION_ID
          AND M_PRICELIST_VERSION.M_PRICELIST_ID = M_PRICELIST.M_PRICELIST_ID
          AND M_PRICELIST.ISSOPRICELIST = 'N'  --  AND M_PRICELIST_VERSION.ISACTIVE= 'Y'
          AND M_PRICELIST_VERSION.VALIDFROM < now()
          AND M_PRODUCTPRICE.M_PRODUCT_ID = p_Product_ID
        ORDER BY M_PRICELIST_VERSION.VALIDFROM DESC
        )
      LOOP
        v_Price := Cur_Pricelist_Version.PRICE;
        EXIT;
      END LOOP;
    END IF;
    IF(v_Price IS NULL) THEN
      SELECT COALESCE(M_PRODUCT_PO.PRICEPO, 0)
      INTO v_Price
      FROM M_PRODUCT_PO
      WHERE M_PRODUCT_PO.M_PRODUCT_ID = p_Product_ID;
    END IF;
    IF(v_Price IS NULL) THEN
      v_Price := 0;
    END IF;
    RETURN v_Price;
END GET_PURCHASE_PRICE
]]></body>
    </function>
  </database>
