<?xml version="1.0"?>
  <database name="FUNCTION AD_UPDATE_SEQUENCE">
    <function name="AD_UPDATE_SEQUENCE" type="NULL">
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL
* All portions are Copyright (C) 2001-2006 Openbravo SL
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
 TYPE RECORD IS REF CURSOR;
   Cur_Script RECORD;
   Cur_Tables RECORD;
   v_NextNo NUMBER;
   v_Aux NUMBER;
   v_StartWith VARCHAR(10) ;
   v_StartWithSys VARCHAR(10) ;
 BEGIN
   select count(*)
    into v_aux
      from ad_sequence
    where name='AD_Sequence';

    if v_Aux=0 then
      INSERT INTO AD_Sequence
        (AD_Sequence_ID, AD_Client_ID, AD_Org_ID,
        IsActive, Created, CreatedBy, Updated, UpdatedBy,
        Name, Description,
        IsAutoSequence, StartNo, IncrementNo, CurrentNextSys, CurrentNext,
        IsTableID, StartNewYear)
     VALUES
        (1, 0, 0,
        'Y', now(), 0, now(), 0,
        'AD_Sequence', 'AD_Sequence',
        'Y', 1000000, 1, 2, 0,
        'Y', 'N');

    end if;

    --Update sequence for ad_update_sequence table
    SELECT TAD_LEVEL INTO v_StartWithSys  FROM AD_SYSTEM  WHERE AD_SYSTEM_ID=0;
    v_StartWith:=TO_CHAR(TO_NUMBER(v_StartWithSys) +1) || '00000';
    v_StartWithSys:=v_StartWithSys || '00000';
    UPDATE AD_SEQUENCE
      SET CURRENTNEXT=(SELECT AD_SEQUENCE.INCREMENTNO +
                                   (CASE SIGN(COALESCE((SELECT MAX(t.AD_Sequence_ID)
                                                          FROM AD_Sequence t
                                                          WHERE t.AD_Sequence_ID<TO_NUMBER(v_StartWith)),0)-TO_NUMBER(v_StartWithSys))
                                    WHEN  -1  THEN TO_NUMBER(v_StartWithSys)-AD_SEQUENCE.INCREMENTNO
                                    ELSE (SELECT MAX(t.AD_Sequence_ID)
                                            FROM AD_Sequence t
                                           WHERE t.AD_Sequence_ID<TO_NUMBER(v_StartWith))
                                     END) AS SEQUENCE
                             FROM AD_SEQUENCE
                            WHERE UPPER(NAME) = 'AD_SEQUENCE')
     WHERE UPPER(NAME) = 'AD_SEQUENCE';

     UPDATE AD_SEQUENCE
        SET CURRENTNEXTSYS=(SELECT AD_SEQUENCE.INCREMENTNO +
                                  COALESCE((SELECT MAX(t.AD_SEQUENCE_ID)
                                              FROM AD_SEQUENCE t
                                             WHERE t.AD_SEQUENCE_ID<TO_NUMBER(v_StartWith)),(TO_NUMBER(v_StartWithSys)-AD_SEQUENCE.INCREMENTNO))
                              FROM AD_SEQUENCE
                             WHERE UPPER(NAME) = 'AD_SEQUENCE')
       WHERE UPPER(NAME) = 'AD_SEQUENCE';


     --Check for fac_acct_group sequence
     select count(*)
    into v_aux
      from ad_sequence
    where name='Fact_Acct_Group';

    if v_Aux=0 then
      AD_Sequence_Next('AD_Sequence', 0, v_NextNo);
      INSERT INTO AD_Sequence
        (AD_Sequence_ID, AD_Client_ID, AD_Org_ID,
        IsActive, Created, CreatedBy, Updated, UpdatedBy,
        Name, Description,
        IsAutoSequence, IncrementNo, StartNo,
        CurrentNextSys, CurrentNext,
        IsTableID, StartNewYear)
     VALUES
        (v_NextNo, 0, 0,
        'Y', now(), 0, now(), 0,
        'Fact_Acct_Group', 'Fact_Acct_Group',
        'Y', 1, 1000000,
        (SELECT AD_SEQUENCE.INCREMENTNO +
                COALESCE((SELECT MAX(t.Fact_Acct_Group_id)
                            FROM FACT_ACCT t
                           WHERE t.Fact_Acct_Group_id< TO_NUMBER(v_StartWith)),(TO_NUMBER(v_StartWithSys)-AD_SEQUENCE.INCREMENTNO))
            FROM AD_SEQUENCE
           WHERE UPPER(NAME) = 'AD_SEQUENCE'),
        (SELECT AD_SEQUENCE.INCREMENTNO +
               (CASE SIGN(COALESCE((SELECT MAX(t.Fact_Acct_Group_id)
                                      FROM fact_acct t
                                      WHERE t.Fact_Acct_Group_id<TO_NUMBER(v_StartWith)),0)-TO_NUMBER(v_StartWithSys))
                WHEN  -1  THEN TO_NUMBER(v_StartWithSys)-AD_SEQUENCE.INCREMENTNO
                ELSE (SELECT MAX(t.Fact_Acct_Group_id)
                        FROM fact_acct t
                       WHERE t.Fact_Acct_Group_id< TO_NUMBER(v_StartWith))
                 END) AS SEQUENCE
         FROM AD_SEQUENCE
        WHERE UPPER(NAME) = 'AD_SEQUENCE'),
        'Y', 'N');
    end if;

     FOR Cur_Tables IN (
     SELECT AD_TABLE_ID, TABLENAME
     FROM AD_TABLE
     WHERE NOT EXISTS (SELECT 1
                       FROM AD_SEQUENCE
                       WHERE AD_SEQUENCE.NAME = AD_TABLE.TABLENAME
                         AND AD_SEQUENCE.AD_CLIENT_ID = 0)
     ) LOOP
     --  Get next number
     AD_Sequence_Next('AD_Sequence', 0, v_NextNo);

     --  Insert
     INSERT INTO AD_Sequence
        (AD_Sequence_ID, AD_Client_ID, AD_Org_ID,
        IsActive, Created, CreatedBy, Updated, UpdatedBy,
        Name, Description,
        IsAutoSequence, StartNo, IncrementNo, CurrentNextSys, CurrentNext,
        IsTableID, StartNewYear)
     VALUES
        (v_NextNo, 0, 0,
        'Y', now(), 0, now(), 0,
        Cur_Tables.TABLENAME, Cur_Tables.TABLENAME,
        'Y', 1000000, 1, 0, 0,
        'Y', 'N');
   END LOOP;                DELETE FROM AD_SCRIPT_SQL;
   AD_UPDATE_SEQUENCE_GENERATE() ;
   FOR Cur_Script IN
     (SELECT STRSQL FROM AD_SCRIPT_SQL)
   LOOP
     EXECUTE IMMEDIATE(Cur_Script.STRSQL) ;
   END LOOP;
END AD_UPDATE_SEQUENCE
]]></body>
    </function>
  </database>
