<?xml version="1.0"?>
  <database name="FUNCTION M_GET_PARETO_ABC">
    <function name="M_GET_PARETO_ABC" type="VARCHAR">
      <parameter name="p_warehouse_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_org_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_client_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_percentageactual" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2012 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/

  v_orgList VARCHAR2(4000) ;
  VARaCUM NUMBER:=0;
  VARaCUMB NUMBER:=0;
  v_limitA NUMBER:=80;
  v_limitB NUMBER:=15;
  v_percentange NUMBER:=0;
  varComprobadoA NUMBER:=0;
  varComprobadoB NUMBER:=0;
  v_totalCost NUMBER;
  TYPE RECORD IS REF CURSOR;
  Cur_Cursor RECORD;
BEGIN

  -- Checks if Sum of all Product's cost are zero
  SELECT SUM(CASE WHEN T1.MOVEMENTQTY>=0 THEN T1.TRANSACTIONCOST ELSE -T1.TRANSACTIONCOST END) INTO v_totalCost
  FROM M_TRANSACTION T1
    LEFT JOIN M_LOCATOR L1 ON (T1.M_LOCATOR_ID=L1.M_LOCATOR_ID)
    LEFT JOIN M_WAREHOUSE W1 ON (L1.M_WAREHOUSE_ID=W1.M_WAREHOUSE_ID)
  WHERE T1.ISCOSTCALCULATED = 'Y'
    AND (p_warehouse_ID IS NULL OR L1.M_WAREHOUSE_ID = p_warehouse_ID)
    AND (p_org_ID IS NULL OR W1.AD_ORG_ID = p_org_ID)
    AND (p_client_id IS NULL OR T1.AD_CLIENT_ID = p_client_id)
  HAVING SUM(T1.MOVEMENTQTY) > 0;
  IF (v_totalCost = 0) THEN
    RAISE_APPLICATION_ERROR(-20000, '@ZeroSumCost@');
  END IF;

  v_percentange := trunc(p_percentageactual,6);
  varAcum :=0;
  varComprobadoA := 0;
  FOR cur_cursor IN (
      SELECT 100*(SUM(CASE WHEN T.MOVEMENTQTY>=0 THEN T.TRANSACTIONCOST ELSE -T.TRANSACTIONCOST END) / v_totalCost) AS PERCENTAGE
      FROM M_TRANSACTION T
          LEFT JOIN M_LOCATOR L ON (T.M_LOCATOR_ID=L.M_LOCATOR_ID)
          LEFT JOIN M_WAREHOUSE W ON (L.M_WAREHOUSE_ID=W.M_WAREHOUSE_ID)
      WHERE T.ISCOSTCALCULATED = 'Y'
        AND (p_warehouse_ID IS NULL OR L.M_WAREHOUSE_ID = p_warehouse_ID)
        AND (p_org_ID IS NULL OR W.AD_ORG_ID = p_org_ID)
        AND (p_client_id IS NULL OR T.AD_CLIENT_ID = p_client_id)
      GROUP BY T.M_PRODUCT_ID
      HAVING SUM(T.MOVEMENTQTY) > 0
      ORDER BY PERCENTAGE DESC
  ) LOOP
    varAcum := varAcum+Cur_Cursor.percentage;
    IF (varComprobadoA=0) THEN
      IF (varAcum>=v_limitA) THEN
        IF (v_percentange>=Cur_Cursor.percentage) THEN
          RETURN 'A';
        ELSE
          varComprobadoA:=-1;
          varAcumB:=-1*Cur_Cursor.percentage;
        END IF;
      END IF;
    END IF;

    IF (varComprobadoA=-1 AND varComprobadoB=0) THEN
      varAcumB:=varAcumB+Cur_Cursor.percentage;
      IF (varAcumB>=v_limitB) THEN
        IF (v_percentange>=Cur_Cursor.percentage) THEN
          RETURN 'B';
        ELSE
          varComprobadoB:=-1;
        END IF;
      END IF;
    END IF;

  END LOOP;
  RETURN 'C';
END M_GET_PARETO_ABC
]]></body>
    </function>
  </database>
