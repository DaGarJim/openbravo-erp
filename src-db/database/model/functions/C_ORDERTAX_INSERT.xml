<?xml version="1.0"?>
  <database name="FUNCTION C_ORDERTAX_INSERT">
    <function name="C_ORDERTAX_INSERT" type="NULL">
      <parameter name="p_order_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_user_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_tax_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_taxbaseamt" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_stdprecision" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL
* All portions are Copyright (C) 2010 Openbravo SL
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_IsSummary C_TAX.ISSUMMARY%TYPE;
  v_Cascade C_TAX.CASCADE%TYPE;
  v_TaxBaseAmount NUMBER;
  v_LineNo C_INVOICETAX.LINE%TYPE;
  v_Rate C_TAX.RATE%TYPE;
  v_Client_ID VARCHAR2(32) ;
  v_Org_ID VARCHAR2(32) ;
  TYPE RECORD IS REF CURSOR;
    Cur_Taxes RECORD;
    FINISH_PROCESS BOOLEAN:=false;
  BEGIN --BODY
    SELECT ISSUMMARY, CASCADE, RATE
    INTO v_IsSummary, v_Cascade, v_Rate
    FROM C_TAX
    WHERE C_TAX_ID = p_tax_id;
    SELECT AD_CLIENT_ID, AD_ORG_ID
    INTO v_Client_ID, v_Org_ID
    FROM C_TAX
    WHERE C_TAX_ID = p_tax_id;
    v_TaxBaseAmount:=p_taxbaseamt;
    IF(v_Cascade='Y') THEN
      SELECT COALESCE(SUM(TAXAMT), 0) + v_TaxBaseAmount
      INTO v_TaxBaseAmount
      FROM C_ORDERTAX
      WHERE C_ORDER_ID = p_order_id;
    END IF;
    IF(v_IsSummary='N') THEN
      SELECT COALESCE(MAX(LINE),0) + 10 
      INTO v_LineNo
      FROM C_ORDERTAX
      WHERE C_ORDER_ID = p_order_id;
      INSERT
      INTO C_ORDERTAX (
      C_OrderTax_ID, C_Order_ID, C_Tax_ID, AD_Client_ID, AD_Org_ID,
      IsActive, Created, CreatedBy, Updated,
      UpdatedBy, TaxBaseAmt, TaxAmt, Line)
      VALUES (
      GET_UUID(), p_order_id, p_tax_id, v_Client_ID, v_Org_ID,
      'Y', now(), p_user_id, now(),
      p_user_id, v_TaxBaseAmount, ROUND(v_TaxBaseAmount*v_Rate / 100, p_StdPrecision), v_LineNo);
    ELSE
      FOR Cur_Taxes IN
        (SELECT C_Tax_ID, RATE
         FROM C_TAX
        WHERE Parent_Tax_ID=p_tax_id
        ORDER BY Line)
      LOOP
        C_ORDERTAX_INSERT(p_order_id, p_user_id, Cur_Taxes.C_Tax_ID, v_TaxBaseAmount, p_StdPrecision);
      END LOOP;
    END IF;
    RETURN;
    --<<FINISH_PROCESS>>
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
END C_ORDERTAX_INSERT]]></body>
    </function>
  </database>
