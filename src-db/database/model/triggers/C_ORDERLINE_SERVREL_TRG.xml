<?xml version="1.0"?>
  <database name="TRIGGER C_ORDERLINE_SERVREL_TRG">
    <trigger name="C_ORDERLINE_SERVREL_TRG" table="C_ORDERLINE_SERVICERELATION" fires="before" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[

/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2015 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/

v_C_ORDERLINE_ID C_ORDERLINE.C_ORDERLINE_ID%TYPE;
v_ISTAXINCLUDED M_PRICELIST.ISTAXINCLUDED%TYPE;
v_STDPRECISION C_CURRENCY.STDPRECISION%TYPE;
v_PRICEPRECISION C_CURRENCY.PRICEPRECISION%TYPE;

BEGIN
  IF (AD_isTriggerEnabled()='N') THEN
    RETURN;
  END IF;
  
  IF (INSERTING OR UPDATING) THEN
    v_C_ORDERLINE_ID := :NEW.C_ORDERLINE_ID;
  ELSE
    v_C_ORDERLINE_ID := :OLD.C_ORDERLINE_ID;
  END IF;
  
  SELECT ISTAXINCLUDED, C_CURRENCY.STDPRECISION, PRICEPRECISION INTO v_ISTAXINCLUDED, v_STDPRECISION, v_PRICEPRECISION
  FROM C_ORDER, C_ORDERLINE, C_CURRENCY
  WHERE C_ORDER.C_ORDER_ID = C_ORDERLINE.C_ORDER_ID
  AND C_ORDERLINE.C_ORDERLINE_ID = v_C_ORDERLINE_ID
  AND C_ORDER.C_CURRENCY_ID = C_CURRENCY.C_CURRENCY_ID;
  
  IF (INSERTING) THEN
    IF(v_ISTAXINCLUDED = 'Y') THEN
      UPDATE C_ORDERLINE SET GROSS_UNIT_PRICE = round(GROSS_UNIT_PRICE + :NEW.AMOUNT,v_PRICEPRECISION) , LINE_GROSS_AMOUNT = round((GROSS_UNIT_PRICE + :NEW.AMOUNT) * QTYORDERED, v_STDPRECISION)
      WHERE C_ORDERLINE_ID = v_C_ORDERLINE_ID;
    ELSE
      UPDATE C_ORDERLINE SET PRICEACTUAL = round(PRICEACTUAL + :NEW.AMOUNT, v_PRICEPRECISION), LINENETAMT = round((PRICEACTUAL + :NEW.AMOUNT) * QTYORDERED, v_STDPRECISION)
      WHERE C_ORDERLINE_ID = v_C_ORDERLINE_ID;
    END IF;
  END IF;
  IF (UPDATING) THEN
    IF(v_ISTAXINCLUDED = 'Y') THEN
      UPDATE C_ORDERLINE SET GROSS_UNIT_PRICE = round(GROSS_UNIT_PRICE + :NEW.AMOUNT - :OLD.AMOUNT, v_PRICEPRECISION), LINE_GROSS_AMOUNT = round((GROSS_UNIT_PRICE + :NEW.AMOUNT - :OLD.AMOUNT) * QTYORDERED, v_STDPRECISION)
      WHERE C_ORDERLINE_ID = v_C_ORDERLINE_ID;
    ELSE
      UPDATE C_ORDERLINE SET PRICEACTUAL = round(PRICEACTUAL + :NEW.AMOUNT - :OLD.AMOUNT, v_PRICEPRECISION), LINENETAMT = round((PRICEACTUAL + :NEW.AMOUNT - :OLD.AMOUNT) * QTYORDERED, v_STDPRECISION)
      WHERE C_ORDERLINE_ID = v_C_ORDERLINE_ID;
    END IF;
  END IF;
  IF (DELETING) THEN
    IF(v_ISTAXINCLUDED = 'Y') THEN
      UPDATE C_ORDERLINE SET GROSS_UNIT_PRICE = round(GROSS_UNIT_PRICE - :OLD.AMOUNT, v_PRICEPRECISION), LINE_GROSS_AMOUNT = round((GROSS_UNIT_PRICE - :OLD.AMOUNT) * QTYORDERED, v_STDPRECISION)
      WHERE C_ORDERLINE_ID = v_C_ORDERLINE_ID;
    ELSE
      UPDATE C_ORDERLINE SET PRICEACTUAL = round(PRICEACTUAL - :OLD.AMOUNT, v_PRICEPRECISION), LINENETAMT = round((PRICEACTUAL - :OLD.AMOUNT) * QTYORDERED, v_STDPRECISION)
      WHERE C_ORDERLINE_ID = v_C_ORDERLINE_ID;
    END IF;
  END IF;
END C_ORDERLINE_SERVREL_TRG
]]></body>
    </trigger>
  </database>
