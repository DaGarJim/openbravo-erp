<?xml version="1.0"?>
  <database name="TRIGGER C_ACCTSCHEMA_ELEMENT_VC_TRG">
    <trigger name="C_ACCTSCHEMA_ELEMENT_VC_TRG" table="C_ACCTSCHEMA_ELEMENT" fires="after" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[
/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2014 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
v_count NUMBER;
TYPE RECORD IS REF CURSOR;
cur_ElementValue RECORD;
BEGIN

IF AD_isTriggerEnabled()='N' THEN
	RETURN;
END IF;

IF INSERTING THEN
	-- Create Valid Combination
	IF(:new.elementtype = 'AC' AND :new.C_Element_ID IS NOT NULL) THEN
		FOR cur_ElementValue IN
		(SELECT C_ElementValue_ID, Value FROM C_ElementValue
			WHERE C_ElementValue.C_Element_ID = :new.C_Element_ID
			AND C_ElementValue.ElementLevel='S'
		)
    LOOP
			v_Count:=0;
			SELECT COUNT(*) INTO v_Count FROM C_VALIDCOMBINATION
				WHERE C_AcctSchema_ID = :new.C_AcctSchema_ID
				AND ACCOUNT_ID = cur_ElementValue.C_ElementValue_ID
				AND ISACTIVE='Y';
			IF(v_Count=0) THEN
				INSERT INTO C_VALIDCOMBINATION
					(C_VALIDCOMBINATION_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY,
					UPDATED, UPDATEDBY, ALIAS, COMBINATION, DESCRIPTION, ISFULLYQUALIFIED,
					C_ACCTSCHEMA_ID, ACCOUNT_ID, M_PRODUCT_ID, C_BPARTNER_ID, AD_ORGTRX_ID, C_LOCFROM_ID,
					C_LOCTO_ID, C_SALESREGION_ID, C_PROJECT_ID, C_CAMPAIGN_ID, C_ACTIVITY_ID, USER1_ID,
					USER2_ID)
				VALUES (
					GET_UUID(), :new.AD_Client_ID, :new.AD_Org_ID, :new.IsActive, :new.Created, :new.CreatedBy,
					:new.Updated, :new.UpdatedBy, cur_ElementValue.value, cur_ElementValue.value, '', 'Y',
					:new.C_AcctSchema_ID, cur_ElementValue.C_ElementValue_ID, null, null, null, null,
					null, null, null, null, null, null,
					null);
			END IF;
		END LOOP;
	END IF;
END IF;
IF UPDATING THEN
	IF (:new.elementtype = 'AC' AND COALESCE(:new.C_Element_ID,'') <> COALESCE(:old.C_Element_ID,'')) THEN
		FOR cur_ElementValue IN
			(SELECT C_ElementValue_ID, Value
				FROM C_ElementValue
				WHERE C_ElementValue.C_Element_ID = :new.C_Element_ID
				AND C_ElementValue.ElementLevel='S'
			)
		LOOP
			v_Count:=0;
			SELECT COUNT(*) INTO v_Count
				FROM C_VALIDCOMBINATION
				WHERE C_AcctSchema_ID = :new.C_AcctSchema_ID
				AND ACCOUNT_ID = cur_ElementValue.C_ElementValue_ID
				AND ISACTIVE='Y';
			IF(v_Count=0) THEN
				INSERT INTO C_VALIDCOMBINATION
					(C_VALIDCOMBINATION_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY,
					UPDATED, UPDATEDBY, ALIAS, COMBINATION, DESCRIPTION, ISFULLYQUALIFIED,
					C_ACCTSCHEMA_ID, ACCOUNT_ID, M_PRODUCT_ID, C_BPARTNER_ID, AD_ORGTRX_ID, C_LOCFROM_ID,
					C_LOCTO_ID, C_SALESREGION_ID, C_PROJECT_ID, C_CAMPAIGN_ID, C_ACTIVITY_ID, USER1_ID,
					USER2_ID)
				VALUES (
					GET_UUID(), :new.AD_Client_ID, :new.AD_Org_ID, :new.IsActive, :new.Created, :new.CreatedBy,
					:new.Updated, :new.UpdatedBy, cur_ElementValue.value, cur_ElementValue.value, '', 'Y',
					:new.C_AcctSchema_ID, cur_ElementValue.C_ElementValue_ID, null, null, null, null,
					null, null, null, null, null, null,
					null);
				END IF;
			END LOOP;
		END IF;
	END IF;
-- Deleting
END C_ACCTSCHEMA_ELEMENT_VC_TRG
]]></body>
    </trigger>
  </database>
