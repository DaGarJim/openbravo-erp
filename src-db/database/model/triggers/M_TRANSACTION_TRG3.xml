<?xml version="1.0"?>
  <database name="TRIGGER M_TRANSACTION_TRG3">
    <trigger name="M_TRANSACTION_TRG3" table="M_TRANSACTION" fires="before" insert="true" update="true" delete="false" foreach="row">
      <body><![CDATA[
/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2024 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  v_Count      NUMBER;
  v_allow_storing_items M_LOCATOR.ALLOW_STORING_ITEMS%TYPE;
  v_hu_type_selection M_LOCATOR.HU_TYPE_SELECTION%TYPE;
  v_refinventory_id M_REFINVENTORY.M_REFINVENTORY_ID%TYPE;
  v_refinventory_type_id M_REFINVENTORY.M_REFINVENTORY_TYPE_ID%TYPE;

BEGIN
  IF (AD_isTriggerEnabled() = 'N') THEN RETURN;
  END IF;

  IF (INSERTING OR UPDATING) THEN
    SELECT ALLOW_STORING_ITEMS, HU_TYPE_SELECTION
      INTO v_allow_storing_items, v_hu_type_selection
    FROM M_LOCATOR
    WHERE M_LOCATOR_ID = :NEW.M_LOCATOR_ID;

    IF (v_allow_storing_items = 'N' AND COALESCE(:NEW.M_ATTRIBUTESETINSTANCE_ID, '-1') <> '0') THEN
      SELECT M_ATTRIBUTESETINSTANCE.M_REFINVENTORY_ID, M_REFINVENTORY.M_REFINVENTORY_TYPE_ID
        INTO v_refinventory_id, v_refinventory_type_id
      FROM M_ATTRIBUTESETINSTANCE
        JOIN M_REFINVENTORY ON M_REFINVENTORY.M_REFINVENTORY_ID = M_ATTRIBUTESETINSTANCE.M_REFINVENTORY_ID
      WHERE M_ATTRIBUTESETINSTANCE.M_REFINVENTORY_ID IS NOT NULL
        AND M_ATTRIBUTESETINSTANCE.M_ATTRIBUTESETINSTANCE_ID = :NEW.M_ATTRIBUTESETINSTANCE_ID;

      IF (v_refinventory_id IS NULL) THEN
        RAISE_APPLICATION_ERROR(-20000, 'Handling Unit cannot be empty for the transactions attributesetinstance as linked locator is set with Allow Storing Items as No');
      END IF;

      SELECT COALESCE(COUNT(*), 0) INTO v_count
        FROM M_LOCATOR_HU_TYPE
      WHERE M_LOCATOR_ID = :NEW.M_LOCATOR_ID
        AND m_refinventory_type_id = v_refinventory_type_id;

      IF ((v_Count > 0 AND v_hu_type_selection = 'E')
        OR (v_Count = 0 AND v_hu_type_selection = 'I')) THEN
        RAISE_APPLICATION_ERROR(-20000, 'Handling Unit Type is not valid for this locator');
      END IF;
    END IF;
  END IF;

END M_TRANSACTION_TRG3
]]></body>
    </trigger>
  </database>
