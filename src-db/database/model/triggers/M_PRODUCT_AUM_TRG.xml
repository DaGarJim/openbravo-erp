<?xml version="1.0"?>
  <database name="TRIGGER M_PRODUCT_AUM_TRG">
    <trigger name="M_PRODUCT_AUM_TRG" table="M_PRODUCT_AUM" fires="before" insert="true" update="true" delete="false" foreach="row">
      <body><![CDATA[
/*************************************************************************
  * The contents of this file are subject to the Compiere Public
  * License 1.1 ("License"); You may not use this file except in
  * compliance with the License. You may obtain a copy of the License in
  * the legal folder of your Openbravo installation.
  * Software distributed under the License is distributed on an
  * "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  * implied. See the License for the specific language governing rights
  * and limitations under the License.
  * The Original Code is  Compiere  ERP &  Business Solution
  * The Initial Developer of the Original Code is Jorg Janke and ComPiere, Inc.
  * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke,
  * parts created by ComPiere are Copyright (C) ComPiere, Inc.;
  * All Rights Reserved.
  * Contributor(s): Openbravo SLU
  * Contributions are Copyright (C) 2016 Openbravo, S.L.U.
  *
  * Specifically, this derivative work is based upon the following Compiere
  * file and version.
  *************************************************************************/

v_Count NUMBER;
v_Match BOOLEAN;
v_GTINALLOWEDCHAR VARCHAR(60) := 'QWERTYUIOPASDFGHJKLZXCVBNM0123456789';

BEGIN

  IF AD_isTriggerEnabled()='N' THEN RETURN;
  END IF;

  IF (:new.conversionrate = 0) THEN
    RAISE_APPLICATION_ERROR(-20000, '@ConversionrateGTZero@');
  END IF;

  SELECT count(*) 
  INTO v_Count
  FROM dual
  WHERE EXISTS ( SELECT 1 
                   FROM M_Product 
                   WHERE m_product_id = :new.m_product_id 
                   AND c_uom_id = :new.c_uom_id);
  IF (v_Count > 0) THEN
    RAISE_APPLICATION_ERROR(-20000, '@DuplicateBUM@');
  END IF;

  SELECT count(*) 
  INTO v_Count
  FROM dual
  WHERE EXISTS ( SELECT 1 
                   FROM M_Product_AUM 
                   WHERE m_product_id = :new.m_product_id 
                   AND c_uom_id = :new.c_uom_id
                   AND m_product_aum_id <> :new.m_product_aum_id);
  IF (v_Count > 0) THEN
    RAISE_APPLICATION_ERROR(-20000, '@DuplicateAUM@');
  END IF;

  IF (:new.sales = 'P') THEN
    SELECT count(*) 
    INTO v_Count
    FROM dual
    WHERE EXISTS ( SELECT 1 
                     FROM M_Product_AUM 
                     WHERE m_product_id = :new.m_product_id 
                     AND sales = :new.sales
                     AND m_product_aum_id <> :new.m_product_aum_id);
    IF (v_Count > 0) THEN
      RAISE_APPLICATION_ERROR(-20000, '@DuplicatePrimarySalesAUM@');
    END IF;
  END IF;

  IF (:new.purchase = 'P') THEN
    SELECT count(*) 
      INTO v_Count
      FROM dual
      WHERE EXISTS ( SELECT 1 
                     FROM M_Product_AUM 
                     WHERE m_product_id = :new.m_product_id 
                     AND purchase = :new.purchase
                     AND m_product_aum_id <> :new.m_product_aum_id);
    IF (v_Count > 0) THEN
      RAISE_APPLICATION_ERROR(-20000, '@DuplicatePrimaryPurchaseAUM@');
    END IF;
  END IF;

  IF (:new.logistics = 'P') THEN
    SELECT count(*) 
      INTO v_Count
      FROM dual
      WHERE EXISTS ( SELECT 1 
                     FROM M_Product_AUM 
                     WHERE m_product_id = :new.m_product_id 
                     AND logistics = :new.logistics
                     AND m_product_aum_id <> :new.m_product_aum_id);
    IF (v_Count > 0) THEN
      RAISE_APPLICATION_ERROR(-20000, '@DuplicatePrimaryLogisticsAUM@');
    END IF;
  END IF;

  IF (:new.gtin IS NOT NULL) THEN
    FOR I IN 1..length(:new.gtin) LOOP
      IF (instr(v_GTINALLOWEDCHAR, upper(substr(:new.gtin,I,1))) = 0) THEN
        RAISE_APPLICATION_ERROR(-20000, '@InvalidGTINFormat@');
      END IF;
    END LOOP;
  END IF;

  END M_PRODUCT_AUM_TRG
]]></body>
    </trigger>
  </database>
