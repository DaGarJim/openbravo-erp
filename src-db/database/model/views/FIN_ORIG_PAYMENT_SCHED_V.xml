<?xml version="1.0"?>
  <database name="VIEW FIN_ORIG_PAYMENT_SCHED_V">
    <view name="FIN_ORIG_PAYMENT_SCHED_V"><![CDATA[SELECT ops.fin_orig_payment_schedule_id AS fin_orig_payment_sched_v_id, ops.ad_client_id, ops.ad_org_id, ops.isactive, ops.created, ops.createdby, ops.updated, ops.updatedby, ops.c_invoice_id, ops.c_order_id, ops.duedate, ops.fin_paymentmethod_id, ops.amount AS expected, ops.c_currency_id, foo.lastpayment, foo.numberofpayments, ops.fin_payment_priority_id, ops.update_payment_plan, foo.received, ops.amount - foo.received AS outstanding
FROM fin_orig_payment_schedule ops
LEFT JOIN (SELECT opsd.fin_orig_payment_schedule_id AS fin_orig_payment_sched_v_id, COALESCE(sum(
CASE
WHEN p.status IN ('PPM', 'RPR', 'PWNC', 'RDNC', 'RPPC') THEN opsd.amount + opsd.writeoffamt
WHEN p.status IN ('RPAP', 'RPAE', 'RPVOID') THEN 0
WHEN aprm_ispaymentconfirmed(p.status, opsd.fin_payment_scheduledetail_id) <> 'N' THEN opsd.amount + opsd.writeoffamt
ELSE 0
END)) AS received, max(p.paymentdate) AS lastpayment, count(DISTINCT opsd.fin_payment_scheduledetail_id) AS numberofpayments
FROM fin_orig_paym_scheddetail opsd
LEFT JOIN fin_orig_payment_schedule ops ON opsd.fin_orig_payment_schedule_id = ops.fin_orig_payment_schedule_id
LEFT JOIN fin_payment_scheduledetail psd ON opsd.fin_payment_scheduledetail_id = psd.fin_payment_scheduledetail_id
LEFT JOIN fin_payment_detail pd ON pd.fin_payment_detail_id = psd.fin_payment_detail_id
LEFT JOIN fin_payment p ON p.fin_payment_id = pd.fin_payment_id
GROUP BY opsd.fin_orig_payment_schedule_id) foo ON foo.fin_orig_payment_sched_v_id = ops.fin_orig_payment_schedule_id
ORDER BY ops.fin_orig_payment_schedule_id]]></view>
  </database>
