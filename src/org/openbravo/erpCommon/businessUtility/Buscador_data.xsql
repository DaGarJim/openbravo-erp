<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html 
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SL 
 * All portions are Copyright (C) 2001-2006 Openbravo SL 
 * All Rights Reserved. 
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->





<SqlClass name="BuscadorData" package="org.openbravo.erpCommon.businessUtility">
   <SqlClassComment></SqlClassComment>
   <SqlMethod name="select" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql> <![CDATA[
        SELECT AD_COLUMN.ad_column_id, (CASE WHEN AD_FIELD_TRL.NAME IS NULL THEN AD_FIELD.NAME ELSE AD_FIELD_TRL.NAME END) AS NAME, 
        ad_reference_id as reference, ad_reference_value_id as referencevalue, ad_val_rule_id, fieldlength, displaylength, 
        AD_COLUMN.columnname, '' as value, ad_tab.ad_window_id, '' as code, 
        REPLACE(REPLACE(REPLACE(ad_element.name, 'Substitute', 'Product'), 'BOM', ''), 'M_LocatorTo_ID', 'M_Locator_ID') as searchName, '' as COLUMNNAMEINP, '' as classname, 
        '' as mappingname, '' as COLUMNNAME_END, ISSELECTIONCOLUMN
        FROM AD_FIELD left join AD_FIELD_TRL on AD_FIELD.ad_field_id = AD_FIELD_TRL.ad_field_id
                                            AND AD_FIELD_TRL.AD_LANGUAGE =?, 
              AD_COLUMN left join AD_ELEMENT on AD_COLUMN.AD_Element_ID = AD_ELEMENT.AD_Element_ID ,  
              AD_TAB 
        WHERE AD_COLUMN.ad_column_id = AD_FIELD.ad_column_id
        AND AD_FIELD.ad_tab_id = AD_TAB.ad_tab_id 
        AND AD_COLUMN.isactive='Y'
        AND AD_FIELD.isactive='Y' 
        AND ISSELECTIONCOLUMN='Y' 
        AND ad_field.ad_tab_ID = TO_NUMBER(?)
        ORDER BY AD_COLUMN.seqno, AD_FIELD.seqno
      ]]></Sql>
        <Parameter name="adLanguage"/>
        <Parameter name="adTabId"/>
   </SqlMethod>
   <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql></Sql>
   </SqlMethod>
   <SqlMethod name="selectIdentifiers" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql> <![CDATA[
        SELECT AD_COLUMN.ad_column_id, (CASE WHEN AD_FIELD_TRL.NAME IS NULL THEN AD_FIELD.NAME ELSE AD_FIELD_TRL.NAME END) AS NAME, 
        ad_reference_id as reference, ad_reference_value_id as referencevalue, ad_val_rule_id, fieldlength, displaylength, 
        AD_COLUMN.columnname, '' as value, ad_tab.ad_window_id, '' as code, 
        REPLACE(REPLACE(REPLACE(ad_element.name, 'Substitute', 'Product'), 'BOM', ''), 'M_LocatorTo_ID', 'M_Locator_ID') as searchName, 'N' AS ISSELECTIONCOLUMN 
        FROM  AD_FIELD left join AD_FIELD_TRL on AD_FIELD.ad_field_id = AD_FIELD_TRL.ad_field_id
                                              AND AD_FIELD_TRL.AD_LANGUAGE =? ,
              AD_COLUMN left join AD_ELEMENT on AD_COLUMN.AD_Element_ID = AD_ELEMENT.AD_Element_ID, 
              AD_TAB
        WHERE AD_COLUMN.ad_column_id = AD_FIELD.ad_column_id
        AND AD_FIELD.ad_tab_id = AD_TAB.ad_tab_id 
        AND AD_COLUMN.isactive='Y'
        AND AD_FIELD.isactive='Y' 
        AND isidentifier='Y'
        AND ad_field.ad_tab_ID = TO_NUMBER(?)
        ORDER BY AD_COLUMN.seqno, AD_FIELD.seqno
      ]]></Sql>
        <Parameter name="adLanguage"/>
        <Parameter name="adTabId"/>
   </SqlMethod>
   <SqlMethod name="isHighVolume" type="preparedStatement" return="String" default="N">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      SELECT ishighvolume FROM AD_TAB, AD_TABLE 
      WHERE AD_TAB.ad_table_id = AD_TABLE.ad_table_id
      AND AD_TAB.ad_tab_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="tab"/>
  </SqlMethod>
  <SqlMethod name="parentsColumnName" type="preparedStatement" return="String" default="">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT ColumnName
        FROM AD_FIELD, AD_COLUMN 
        WHERE AD_FIELD.ad_column_id = AD_COLUMN.ad_column_id 
        AND ad_tab_ID = TO_NUMBER(?)
        AND isparent = 'Y'
        order by ad_column.seqno
      ]]></Sql>
      <Parameter name="tab"/>
  </SqlMethod>
  <SqlMethod name="selectSearchs" type="preparedStatement" return="multiple">
    <SqlMethodComment>Names of the columns and name of the fields of a tab</SqlMethodComment>
    <Sql><![CDATA[
      SELECT R.NAME, T.TABLENAME AS REFERENCE, C.COLUMNNAME AS COLUMNNAME, RSC.NAME AS COLUMNNAMEINP, 
      RSC.COLUMNNAME AS REFERENCEVALUE, MO.CLASSNAME, MOM.MAPPINGNAME, RSC.COLUMN_SUFFIX AS COLUMNNAME_END 
      FROM AD_REFERENCE R left join AD_REF_SEARCH RS  on R.AD_REFERENCE_ID = RS.AD_REFERENCE_ID 
                          left join AD_REF_SEARCH_COLUMN RSC on RS.AD_REF_SEARCH_ID = RSC.AD_REF_SEARCH_ID
                                AND RSC.COLUMNTYPE = ?, 
           AD_MODEL_OBJECT MO, AD_MODEL_OBJECT_MAPPING MOM, 
           AD_TABLE T, AD_COLUMN C 
      WHERE R.VALIDATIONTYPE = 'S' 
      AND R.AD_REFERENCE_ID = TO_NUMBER(?)
      AND R.AD_REFERENCE_ID = MO.AD_REFERENCE_ID
      AND MO.ACTION = 'S' 
      AND MO.ISACTIVE = 'Y'
      AND MO.ISDEFAULT = 'Y'
      AND MO.AD_MODEL_OBJECT_ID = MOM.AD_MODEL_OBJECT_ID 
      AND MOM.ISACTIVE = 'Y' 
      AND MOM.ISDEFAULT = 'Y'
      AND RS.AD_TABLE_ID = T.AD_TABLE_ID 
      AND RS.AD_COLUMN_ID = C.AD_COLUMN_ID 
    ]]></Sql>
    <Parameter name="columntype"/>
    <Parameter name="searchId"/>
  </SqlMethod>
  <SqlMethod name="selectSearchName" type="preparedStatement" return="String" default="">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT AD_COLUMN_IDENTIFIER(?, ?, ?) AS NAME from dual
      ]]></Sql>
      <Parameter name="table_name"/>
      <Parameter name="c_bpartner_id"/>
      <Parameter name="adLanguage"/>
  </SqlMethod>

  <SqlMethod name="selectSearchTableName" type="preparedStatement" return="String" default="">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
          select tablename AS NAME from ad_ref_search rs, ad_table t
          where rs.ad_table_id = t.ad_table_id
          and rs.ad_reference_ID = TO_NUMBER(?)
      ]]></Sql>
      <Parameter name="ad_reference_id"/>
  </SqlMethod>
</SqlClass>
