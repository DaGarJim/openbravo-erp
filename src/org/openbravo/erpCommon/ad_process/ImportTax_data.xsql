<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ******************************************************************************
 * The contents of this file are subject to the   Compiere License  Version 1.1
 * ("License"); You may not use this file except in compliance with the License
 * You may obtain a copy of the License at http://www.compiere.org/license.html
 * Software distributed under the License is distributed on an  "AS IS"  basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 * The Original Code is                  Compiere  ERP & CRM  Business Solution
 * The Initial Developer of the Original Code is Jorg Janke  and ComPiere, Inc.
 * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke, parts
 * created by ComPiere are Copyright (C) ComPiere, Inc.;   All Rights Reserved.
 * Contributor(s): Openbravo SL
 * Contributions are Copyright (C) 2001-2006 Openbravo S.L.
 ******************************************************************************
-->



<SqlClass name="ImportTaxData" package="org.openbravo.erpCommon.ad_process">

  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT I_Tax_ID, C_Tax_ID, T_Name, C_TaxCategory_ID, TC_Name, C_BP_TaxCategory_ID, BPTC_Name,
               parent_tax_id, parent_Name, C_Country_ID, C_Region_ID, TO_Country_Id, TO_Region_ID, 
               '' as n
			  FROM I_Tax
			  WHERE I_IsImported='N'
        AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
    <SqlMethod name="selectTaxCategoryId" type="preparedStatement" return="string">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT C_TaxCategory_ID
			  FROM C_TaxCategory
			  WHERE Name = ?
        AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="name"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

    <SqlMethod name="selectBPTaxCategoryId" type="preparedStatement" return="string">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT C_BP_TaxCategory_ID
			  FROM C_BP_TaxCategory
			  WHERE Name = ?
        AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="name"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod> 
  
      <SqlMethod name="selectTaxId" type="preparedStatement" return="string">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT C_Tax_ID
			  FROM C_Tax
			  WHERE Name = ?
        AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="name"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
    
  <SqlMethod name="deleteOld" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      DELETE FROM I_Tax WHERE I_IsImported='Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
  <SqlMethod name="updateRecords" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax 
        SET AD_Client_ID = COALESCE(AD_Client_ID, TO_NUMBER(?)),
        AD_Org_ID = COALESCE(AD_Org_ID, 0),
        IsActive = COALESCE(IsActive, 'Y'),
        Created = COALESCE(Created, now()),
        CreatedBy = COALESCE(CreatedBy, 0),
        Updated = COALESCE(Updated, now()),
        UpdatedBy = COALESCE(UpdatedBy, 0),
        I_ErrorMsg = NULL,
        I_IsImported = 'N' 
        WHERE I_IsImported<>'Y' OR I_IsImported IS NULL
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
  <SqlMethod name="updateTaxCategoryId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax T
			  SET C_TaxCategory_ID=(
          SELECT C_TaxCategory_ID 
          FROM C_TaxCategory C
			    WHERE T.TC_Name=C.Name
          AND C.AD_Client_ID=T.AD_Client_ID
        )
			  WHERE C_TaxCategory_ID IS NULL
        AND TC_Name IS NOT NULL
			  AND I_IsImported='N'
        AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateBPTaxCategoryId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax T
			  SET C_BP_TaxCategory_ID=(
          SELECT C_BP_TaxCategory_ID 
          FROM C_BP_TaxCategory C
			    WHERE T.BPTC_Name=C.Name
          AND C.AD_Client_ID=T.AD_Client_ID
        )
			  WHERE C_BP_TaxCategory_ID IS NULL
        AND BPTC_Name IS NOT NULL
			  AND I_IsImported='N'
        AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>

  <SqlMethod name="updateTaxId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax T
			  SET C_Tax_ID=(
          SELECT C_Tax_ID 
          FROM C_Tax C
			    WHERE T.T_Name=C.Name
          AND C.AD_Client_ID=T.AD_Client_ID
        )
			  WHERE C_Tax_ID IS NULL
        AND T_Name IS NOT NULL
			  AND I_IsImported='N'
        AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>  
  
  <SqlMethod name="updateCountryFromId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax t
			  SET C_Country_ID=(
          SELECT MAX(C_Country_ID) 
            FROM C_Country c
  			   WHERE c.AD_Client_ID IN (0, t.AD_Client_ID)
             AND  (UPPER(c.CountryCode) = UPPER(t.from_code_Country)
               OR  UPPER(c.Name) = UPPER(t.from_code_Country)))
			  WHERE C_Country_ID IS NULL
        AND from_code_Country IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
  <SqlMethod name="updateCountryFromError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax
			  SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Country From, '
			  WHERE C_Country_ID IS NULL
          AND from_code_Country IS NOT NULL
  			  AND I_IsImported<>'Y'
          AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
    <SqlMethod name="updateCountryToId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax t
			  SET TO_Country_ID=(
          SELECT MAX(C_Country_ID) 
            FROM C_Country c
  			   WHERE c.AD_Client_ID IN (0, t.AD_Client_ID)
             AND  (UPPER(c.CountryCode) = UPPER(t.to_code_Country)
               OR  UPPER(c.Name) = UPPER(t.to_code_Country)))
			  WHERE TO_Country_ID IS NULL
        AND to_code_Country IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
  <SqlMethod name="updateCountryToError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax
			  SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Country To, '
			  WHERE TO_Country_ID IS NULL
          AND to_code_Country IS NOT NULL
  			  AND I_IsImported<>'Y'
          AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
  <SqlMethod name="updateRegionFromId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax t
			  SET C_Region_ID=(
          SELECT MAX(C_Region_ID) 
            FROM C_Region r
  			   WHERE r.AD_Client_ID IN (0, t.AD_Client_ID)
             AND  (UPPER(r.Value) = UPPER(t.from_code_region)
               OR  UPPER(r.Name) = UPPER(t.from_code_region)))
			  WHERE C_Region_ID IS NULL
        AND from_code_Region IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
  <SqlMethod name="updateRegionFromError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax
			  SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Region From, '
			  WHERE C_Region_ID IS NULL
          AND from_code_Region IS NOT NULL
  			  AND I_IsImported<>'Y'
          AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
    <SqlMethod name="updateRegionToId" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax t
			  SET TO_Region_ID=(
          SELECT MAX(C_Region_ID) 
            FROM C_Region r
  			   WHERE r.AD_Client_ID IN (0, t.AD_Client_ID)
             AND  (UPPER(r.Value) = UPPER(t.to_code_region)
               OR  UPPER(r.Name) = UPPER(t.to_code_region)))
			  WHERE TO_Region_ID IS NULL
        AND to_code_Region IS NOT NULL
			  AND I_IsImported<>'Y'
        AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
  <SqlMethod name="updateRegionToError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax
			  SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid Region To, '
			  WHERE TO_Region_ID IS NULL
          AND to_code_Region IS NOT NULL
  			  AND I_IsImported<>'Y'
          AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  
  
  
  
  <SqlMethod name="insertTaxCategory" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
			  INSERT INTO C_TaxCategory 
          (C_TaxCategory_ID, AD_Client_ID, AD_Org_ID,
          IsActive,Created,CreatedBy,Updated,UpdatedBy,
          Name, Description, commodityCode)
  		  SELECT TO_NUMBER(?), AD_Client_ID, AD_Org_ID,
            'Y',now(),CreatedBy,now(),UpdatedBy,
            TC_Name, TC_Description, TC_commodityCode
			  	  FROM I_Tax
				    WHERE I_Tax_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="CTaxCategoryID"/>
    <Parameter name="ITaxID"/>
  </SqlMethod>
  
  <SqlMethod name="updateTaxCategory" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
			  UPDATE C_TaxCategory 
           SET updated = now(),
               updatedBy = (SELECT updatedBy FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?)),
               description = COALESCE((SELECT TC_Description FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?)),description),
               commodityCode = COALESCE((SELECT TC_commodityCode FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?)),commodityCode)
         WHERE C_TaxCategory_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ITaxID"/>
    <Parameter name="ITaxID"/>
    <Parameter name="ITaxID"/>
    <Parameter name="CTaxCategoryID"/>    
  </SqlMethod>
  
    <SqlMethod name="insertBPTaxCategory" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
			  INSERT INTO C_BP_TaxCategory 
          (C_BP_TaxCategory_ID, AD_Client_ID, AD_Org_ID,
          IsActive,Created,CreatedBy,Updated,UpdatedBy,
          Name, Description)
  		  SELECT TO_NUMBER(?), AD_Client_ID, AD_Org_ID,
            'Y',now(),CreatedBy,now(),UpdatedBy,
            BPTC_Name, BPTC_Description
			  	  FROM I_Tax
				    WHERE I_Tax_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="CBPTaxCategoryID"/>
    <Parameter name="ITaxID"/>
  </SqlMethod>
  
  <SqlMethod name="updateBPTaxCategory" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
			  UPDATE C_BP_TaxCategory 
           SET updated        = now(),
               updatedBy      = (SELECT updatedBy FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?)),
               description    = COALESCE((SELECT BPTC_Description FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?)),description)
         WHERE C_BP_TaxCategory_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ITaxID"/>
    <Parameter name="ITaxID"/>
    <Parameter name="CTaxCategoryID"/>    
  </SqlMethod>
  
   <SqlMethod name="insertDefaultTax" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
			  INSERT INTO C_Tax
        (C_Tax_ID, AD_Client_ID, AD_Org_ID,
          IsActive,Created,CreatedBy,Updated,UpdatedBy,
          Name, ValidFrom, Rate,
          c_TaxCategory_ID)
        SELECT TO_NUMBER(?), AD_Client_ID, AD_Org_ID,
            'Y',now(),CreatedBy,now(),UpdatedBy,
            parent_Name, COALESCE(ValidFrom,now()), 0,
            TO_NUMBER(?)
			  	  FROM I_Tax
				    WHERE I_Tax_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="TaxID"/>
    <Parameter name="TaxCategory"/>    
    <Parameter name="ITaxID"/>
  </SqlMethod>
  
   <SqlMethod name="insertTax" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
			  INSERT INTO C_Tax
        (C_Tax_ID, AD_Client_ID, AD_Org_ID,
          IsActive,Created,CreatedBy,Updated,UpdatedBy,
          Name, Description, ValidFrom, Rate,
          c_TaxCategory_ID, c_BP_TaxCategory_ID, PARENT_TAX_ID,
          TAXINDICATOR, ISSUMMARY, ISTAXEXEMPT,    
          SOPOTYPE, LINE, CASCADE)
  		  SELECT TO_NUMBER(?), AD_Client_ID, AD_Org_ID,
            'Y',now(),CreatedBy,now(),UpdatedBy,
            T_Name, T_Description, COALESCE(ValidFrom,now()), Rate,
            TO_NUMBER(?), TO_NUMBER(?), TO_NUMBER(?),
            TAXINDICATOR, COALESCE(ISSUMMARY,'N'), COALESCE(ISTAXEXEMPT,'N'),    
            COALESCE(SOPOTYPE,'B'), LINE, COALESCE(CASCADE,'N')
			  	  FROM I_Tax
				    WHERE I_Tax_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="TaxID"/>
    <Parameter name="TaxCategory"/>
    <Parameter name="BPTaxCategory"/>
    <Parameter name="ParentTax"/>
    <Parameter name="ITaxID"/>
  </SqlMethod>
  
  <SqlMethod name="updateTax" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
			  UPDATE C_Tax 
           SET updated            = now(),
               updatedBy          = (SELECT updatedBy FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?)),
               description        = COALESCE((SELECT T_Description     FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?)), description),
               ValidFrom          = COALESCE((SELECT ValidFrom         FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?)), ValidFrom),
               Rate               = COALESCE((SELECT Rate              FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?)), Rate),
               C_TaxCategory_ID   = COALESCE(TO_NUMBER(?),C_TaxCategory_ID),
               C_BP_TaxCategory_ID= COALESCE(TO_NUMBER(?),C_BP_TaxCategory_ID),
               Parent_Tax_ID      = COALESCE(TO_NUMBER(?),Parent_Tax_ID),
               TAXINDICATOR       = COALESCE((SELECT TAXINDICATOR FROM I_Tax WHERE I_Tax = TO_NUMBER(?)),TAXINDICATOR),   
               ISSUMMARY          = COALESCE((SELECT ISSUMMARY FROM I_Tax WHERE I_Tax = TO_NUMBER(?)),ISSUMMARY),      
               ISTAXEXEMPT        = COALESCE((SELECT ISTAXEXEMPT FROM I_Tax WHERE I_Tax = TO_NUMBER(?)),ISTAXEXEMPT),    
               SOPOTYPE           = COALESCE((SELECT SOPOTYPE FROM I_Tax WHERE I_Tax = TO_NUMBER(?)),SOPOTYPE),       
               LINE               = COALESCE((SELECT LINE FROM I_Tax WHERE I_Tax = TO_NUMBER(?)),LINE),           
               CASCADE            = COALESCE((SELECT CASCADE FROM I_Tax WHERE I_Tax = TO_NUMBER(?)),CASCADE) 
         WHERE C_Tax_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ITaxID"/>
    <Parameter name="ITaxID"/>
    <Parameter name="ITaxID"/>
    <Parameter name="ITaxID"/>
    <Parameter name="TaxCategoryID"/>
    <Parameter name="BPTaxCategoryID"/>
    <Parameter name="ParentTax"/>
    <Parameter name="ITaxID"/>
    <Parameter name="ITaxID"/>
    <Parameter name="ITaxID"/>
    <Parameter name="ITaxID"/>
    <Parameter name="ITaxID"/>
    <Parameter name="ITaxID"/>
    <Parameter name="CTaxID"/>    
  </SqlMethod>
  
  <SqlMethod name="hasLocation" type="preparedStatement" connection="true" return="string">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT COUNT(*) AS N
          FROM C_TAX
         WHERE (C_Country_ID is not null
            OR C_Region_ID is not null
            OR TO_Country_ID is not null
            OR TO_Region_ID is not null)
           AND C_Tax_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="taxID"/>
  </SqlMethod>
  
  <SqlMethod name="updateTaxRegion" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
         UPDATE C_Tax
            SET C_Country_ID  = (SELECT C_Country_ID  FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?)),
                C_Region_ID   = (SELECT C_Region_ID   FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?)),
                TO_Country_ID = (SELECT TO_Country_ID FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?)),
                TO_Region_ID  = (SELECT TO_Region_ID  FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?))
          WHERE C_Tax_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ItaxID"/>
    <Parameter name="ItaxID"/>
    <Parameter name="ItaxID"/>
    <Parameter name="ItaxID"/>
    <Parameter name="taxID"/>
  </SqlMethod>
  
  <SqlMethod name="existsLocation" type="preparedStatement" connection="true" return="string">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT COUNT(*) AS N
          FROM (SELECT 1
                  FROM C_TAX
                 WHERE COALESCE(C_Country_ID,0) =(SELECT COALESCE(C_Country_ID,0)  FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?))
                   AND COALESCE(C_Region_ID,0)  =(SELECT COALESCE(C_Region_ID,0)   FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?))
                   AND COALESCE(TO_Country_ID,0)=(SELECT COALESCE(TO_Country_ID,0) FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?))
                   AND COALESCE(TO_Region_ID,0) =(SELECT COALESCE(TO_Region_ID,0)  FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?))
                   AND C_Tax_ID = TO_NUMBER(?)
                UNION
                SELECT 1
                  FROM C_TAX_ZONE
                 WHERE COALESCE(FROM_Country_ID,0)=(SELECT COALESCE(C_Country_ID,0)   FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?))
                   AND COALESCE(FROM_Region_ID,0) =(SELECT COALESCE(C_Region_ID,0)    FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?))
                   AND COALESCE(TO_Country_ID,0)  =(SELECT COALESCE(TO_Country_ID,0)  FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?))
                   AND COALESCE(TO_Region_ID,0)   =(SELECT COALESCE(TO_Region_ID,0)   FROM I_Tax WHERE I_Tax_ID = TO_NUMBER(?))
                   AND C_Tax_ID = TO_NUMBER(?)) AAA
      ]]>
    </Sql>
    <Parameter name="ItaxID"/>
    <Parameter name="ItaxID"/>
    <Parameter name="ItaxID"/>
    <Parameter name="ItaxID"/>
    <Parameter name="CtaxID"/>
    <Parameter name="ItaxID"/>
    <Parameter name="ItaxID"/>
    <Parameter name="ItaxID"/>
    <Parameter name="ItaxID"/>
    <Parameter name="CtaxID"/>
  </SqlMethod>
  
    <SqlMethod name="insertTaxZone" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
         INSERT INTO C_Tax_Zone
           (C_Tax_ZONE_ID, AD_Client_ID, AD_Org_ID,
            IsActive,Created,CreatedBy,Updated,UpdatedBy,
            C_Tax_ID, From_Country_ID, From_Region_ID,
            TO_country_ID, To_region_ID)
         SELECT TO_NUMBER(?), AD_Client_ID, AD_Org_ID,
                'Y',now(),CreatedBy,now(),UpdatedBy,
                TO_NUMBER(?), C_Country_ID, C_Region_ID,
                TO_Country_ID, To_Region_ID
           FROM I_Tax
          WHERE I_Tax_ID=TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="taxZoneID"/>
    <Parameter name="cTaxID"/>
    <Parameter name="ItaxID"/>
  </SqlMethod>
  
  

  <SqlMethod name="taxError" type="preparedStatement" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax
			  SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||?
				WHERE I_Tax_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="error"/>
    <Parameter name="i_tax_id"/>
  </SqlMethod>

  <SqlMethod name="setImported" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
				UPDATE I_Tax
        SET I_IsImported='Y', 
            C_TaxCategory_ID=TO_NUMBER(?),
            Updated=now(), Processed='Y'
        WHERE I_Tax_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="CTaxCategoryID"/>
    <Parameter name="ITaxID"/>
  </SqlMethod>

  <SqlMethod name="updateSetImportedError" type="preparedStatement" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Tax
			  SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'Set Imported, '
				WHERE I_Tax_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="i_tax_id"/>
  </SqlMethod>
  
  <SqlMethod name="updateNotImported" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
				UPDATE I_BPartner
        SET I_IsImported='N', Updated=now()
			  WHERE I_IsImported<>'Y'
        AND AD_CLIENT_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="adClientId"/>
  </SqlMethod>

</SqlClass>
