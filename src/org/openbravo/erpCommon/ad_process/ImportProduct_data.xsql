<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ******************************************************************************
 * The contents of this file are subject to the   Compiere License  Version 1.1
 * ("License"); You may not use this file except in compliance with the License
 * You may obtain a copy of the License at http://www.compiere.org/license.html
 * Software distributed under the License is distributed on an  "AS IS"  basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 * The Original Code is                  Compiere  ERP & CRM  Business Solution
 * The Initial Developer of the Original Code is Jorg Janke  and ComPiere, Inc.
 * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke, parts
 * created by ComPiere are Copyright (C) ComPiere, Inc.;   All Rights Reserved.
 * Contributor(s): Openbravo SL
 * Contributions are Copyright (C) 2001-2006 Openbravo S.L.
 ******************************************************************************
-->



<SqlClass name="ImportProductData" package="org.openbravo.erpCommon.ad_process">
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      SELECT I_Product_ID, M_Product_ID, C_BPartner_ID, 0 as C_TaxCategory_ID, '' AS ID, '' AS NAME
      FROM I_Product WHERE I_IsImported='N'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="deleteOld" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      DELETE FROM I_Product WHERE I_IsImported='Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateRecords" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Product 
        SET AD_Client_ID = COALESCE(AD_Client_ID, TO_NUMBER(?)),
        AD_Org_ID = COALESCE(AD_Org_ID, 0),
        IsActive = COALESCE(IsActive, 'Y'),
        Created = COALESCE(Created, now()),
        CreatedBy = COALESCE(CreatedBy, 0),
        Updated = COALESCE(Updated, now()),
        UpdatedBy = COALESCE(UpdatedBy, 0),
        ProductType = COALESCE(ProductType, 'I'),
        I_ErrorMsg = NULL,
        I_IsImported = 'N' 
        WHERE I_IsImported<>'Y' OR I_IsImported IS NULL
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateBPartner" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product 
      SET C_BPartner_ID=(SELECT C_BPartner_ID FROM C_BPartner p
      WHERE I_Product.BPartner_Value=p.Value AND I_Product.AD_Client_ID=p.AD_Client_ID) 
      WHERE C_BPartner_ID IS NULL
      AND BPartner_Value IS NOT NULL
      AND I_IsImported<>'Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateBPartnerError" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product 
      SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid BPartner,' 
      WHERE C_BPartner_ID IS NULL
      AND BPartner_Value IS NOT NULL
      AND I_IsImported<>'Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateProductByUPC" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET M_Product_ID=(SELECT M_Product_ID FROM M_Product p
      WHERE I_Product.UPC=p.UPC AND I_Product.AD_Client_ID=p.AD_Client_ID) 
      WHERE M_Product_ID IS NULL
      AND I_IsImported='N'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateProductByValue" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET M_Product_ID=(SELECT M_Product_ID FROM M_Product p
      WHERE I_Product.Value=p.Value AND I_Product.AD_Client_ID=p.AD_Client_ID) 
      WHERE M_Product_ID IS NULL
      AND I_IsImported='N'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateProductByVendor" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET M_Product_ID=(SELECT M_Product_ID FROM M_Product_po p
      WHERE I_Product.C_BPartner_ID=p.C_BPartner_ID
      AND I_Product.VendorProductNo=p.VendorProductNo AND I_Product.AD_Client_ID=p.AD_Client_ID) 
      WHERE M_Product_ID IS NULL
      AND I_IsImported='N'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateProductField" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET    value    = (SELECT   value     FROM M_Product p
      WHERE I_Product.M_Product_ID=p.M_Product_ID AND I_Product.AD_Client_ID=p.AD_Client_ID) 
      WHERE M_Product_ID IS NOT NULL
      AND    value   IS NULL
      AND I_IsImported='N'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
     <Parameter name="field" type="replace" optional="true" after="SET    " text="value"/>
     <Parameter name="field" type="replace" optional="true" after="= (SELECT   " text="value"/>
     <Parameter name="field" type="replace" optional="true" after="AND    " text="value"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateProductNumField" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET    C_UOM_ID  = (SELECT   C_UOM_ID   FROM M_Product p
      WHERE I_Product.M_Product_ID=p.M_Product_ID AND I_Product.AD_Client_ID=p.AD_Client_ID) 
      WHERE M_Product_ID IS NOT NULL
      AND (   C_UOM_ID  IS NULL OR      C_UOM_ID=0)
      AND I_IsImported='N'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
     <Parameter name="field" type="replace" optional="true" after="SET    " text="C_UOM_ID"/>
     <Parameter name="field" type="replace" optional="true" after="= (SELECT   " text="C_UOM_ID"/>
     <Parameter name="field" type="replace" optional="true" after="AND (   " text="C_UOM_ID"/>
     <Parameter name="field" type="replace" optional="true" after="IS NULL OR      " text="C_UOM_ID"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateProductFieldPO" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET    UPC    = (SELECT    UPC     FROM M_Product_PO p where
      I_Product.M_Product_ID=p.M_Product_ID AND I_Product.C_BPartner_ID=p.C_BPartner_ID AND I_Product.AD_Client_ID=p.AD_Client_ID) 
      WHERE M_Product_ID IS NOT NULL AND C_BPartner_ID IS NOT NULL
      AND    UPC   IS NULL
      AND I_IsImported='N'      
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
     <Parameter name="field" type="replace" optional="true" after="SET    " text="UPC"/>
     <Parameter name="field" type="replace" optional="true" after="= (SELECT    " text="UPC"/>
     <Parameter name="field" type="replace" optional="true" after="AND    " text="UPC"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateProductNumFieldPO" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET    C_UOM_ID   = (SELECT    C_UOM_ID
      FROM M_Product_PO p
      WHERE I_Product.M_Product_ID=p.M_Product_ID AND I_Product.C_BPartner_ID=p.C_BPartner_ID AND I_Product.AD_Client_ID=p.AD_Client_ID) 
      WHERE M_Product_ID IS NOT NULL AND C_BPartner_ID IS NOT NULL
      AND (     C_UOM_ID      IS NULL OR     C_UOM_ID     =0)
      AND I_IsImported='N'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
     <Parameter name="field" type="replace" optional="true" after="SET    " text="C_UOM_ID"/>
     <Parameter name="field" type="replace" optional="true" after="= (SELECT    " text="C_UOM_ID"/>
     <Parameter name="field" type="replace" optional="true" after="AND (     " text="C_UOM_ID"/>
     <Parameter name="field" type="replace" optional="true" after="IS NULL OR     " text="C_UOM_ID"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateX12DE355" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET X12DE355 = COALESCE ((SELECT MIN(X12DE355) 
               FROM C_UOM u WHERE u.IsDefault='Y' 
               AND u.AD_Client_ID IN (0,I_Product.AD_Client_ID) 
               ), 'EA')
      WHERE X12DE355 IS NULL AND C_UOM_ID IS NULL
      AND I_IsImported<>'Y'
      AND C_UOM_ID IS NULL      
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateProductUOM" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET C_UOM_ID = (SELECT max(C_UOM_ID) FROM C_UOM u WHERE u.X12DE355=I_Product.X12DE355 AND u.AD_Client_ID IN (0,I_Product.AD_Client_ID)) 
      WHERE C_UOM_ID IS NULL
      AND I_IsImported<>'Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateProductInvalidUOM" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product 
      SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid UOM, ' 
      WHERE C_UOM_ID IS NULL
      AND I_IsImported<>'Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateProductCategoryDefault" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product 
      SET ProductCategory_Value=(SELECT MIN(Value) FROM M_Product_Category
      WHERE IsDefault='Y' AND AD_Client_ID = TO_NUMBER(?)) 
      WHERE ProductCategory_Value IS NULL AND M_Product_Category_ID IS NULL
      AND I_IsImported<>'Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateProductCategory" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET M_Product_Category_ID=(SELECT M_Product_Category_ID FROM M_Product_Category c
      WHERE I_Product.ProductCategory_Value=c.Value AND I_Product.AD_Client_ID=c.AD_Client_ID) 
      WHERE M_Product_Category_ID IS NULL
      AND I_IsImported<>'Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateInvalidCategory" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product 
      SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid ProdCategorty,' 
      WHERE M_Product_Category_ID IS NULL
      AND I_IsImported<>'Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateCurrencyDefault" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET ISO_Code=(SELECT ISO_Code FROM C_Currency c, C_AcctSchema a, AD_ClientInfo ci
      where a.C_Currency_ID=c.C_Currency_ID
      and a.C_AcctSchema_ID=ci.C_AcctSchema1_ID
      and ci.AD_Client_ID=I_Product.AD_Client_ID) 
      WHERE C_Currency_ID IS NULL AND ISO_Code IS NULL
      AND I_IsImported<>'Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateCurrency" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET C_Currency_ID=(SELECT C_Currency_ID FROM C_Currency c
      WHERE I_Product.ISO_Code=c.ISO_Code AND c.AD_Client_ID IN (0,I_Product.AD_Client_ID)) 
      WHERE C_Currency_ID IS NULL
      AND I_IsImported<>'Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateInvalidCurrency" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product 
      SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Currency,' 
      WHERE C_Currency_ID IS NULL
      AND I_IsImported<>'Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateInvalidProductType" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product 
      SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Invalid ProductType,' 
      WHERE ProductType NOT IN ('I','S')
      AND I_IsImported<>'Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateNotUniqueValue" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=Value not unique,' 
      WHERE I_IsImported<>'Y'
      AND Value IN (SELECT Value FROM I_Product ii WHERE I_Product.AD_Client_ID=ii.AD_Client_ID GROUP BY Value HAVING COUNT(*) > 1)
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateNotUniqueUPC" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=UPC not unique,' 
      WHERE I_IsImported<>'Y'
      AND UPC IN (SELECT UPC FROM I_Product ii WHERE I_Product.AD_Client_ID=ii.AD_Client_ID GROUP BY UPC HAVING COUNT(*) > 1)
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateNoMandatoryValue" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=No Mandatory Value,' 
      WHERE Value IS NULL
      AND I_IsImported<>'Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateVendorProductNoSetToValue" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product 
      SET VendorProductNo=Value 
      WHERE C_BPartner_ID IS NOT NULL AND VendorProductNo IS NULL
      AND I_IsImported='N'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="updateNotUniqueVendorProductNo" type="preparedStatement" connection="true" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        UPDATE I_Product  
        SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'ERR=VendorProductNo not unique,' 
        WHERE I_IsImported<>'Y'
        AND C_BPartner_ID IS NOT NULL
        AND (C_BPartner_ID, VendorProductNo) IN 
        (SELECT C_BPartner_ID, VendorProductNo FROM I_Product ii WHERE I_Product.AD_Client_ID=ii.AD_Client_ID GROUP BY C_BPartner_ID, VendorProductNo HAVING COUNT(*) > 1)
        AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="selectTaxCategory" type="preparedStatement" return="String" default="">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      SELECT C_TaxCategory_ID FROM C_TaxCategory WHERE IsDefault='Y'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="selectRecords" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      SELECT I_Product_ID, M_Product_ID, C_BPartner_ID 
      FROM I_Product WHERE I_IsImported='N'
      AND AD_Client_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="ad_client_id"/>
  </SqlMethod>
  <SqlMethod name="insertProductImport" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      INSERT INTO M_Product (M_Product_ID,
      AD_Client_ID,AD_Org_ID,IsActive,Created,CreatedBy,Updated,UpdatedBy,
      Value,Name,Description,DocumentNote,Help,
      UPC,SKU,C_UOM_ID,IsSummary,M_Product_Category_ID,C_TaxCategory_ID,
      ProductType,ImageURL,DescriptionURL) 
      SELECT TO_NUMBER(?),
      AD_Client_ID,AD_Org_ID,'Y',now(),CreatedBy,now(),UpdatedBy,
      Value,Name,Description,DocumentNote,Help,
      UPC,SKU,C_UOM_ID,'N',M_Product_Category_ID,TO_NUMBER(?) ,
      ProductType,ImageURL,DescriptionURL 
      FROM I_Product 
      WHERE I_Product_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="MProductID"/>
    <Parameter name="CTaxCategoryID"/>
    <Parameter name="IProductID"/>
  </SqlMethod>
  <SqlMethod name="updateProductImport" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE M_PRODUCT 
      SET Value= 
      (SELECT Value
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      Name= 
      (SELECT Name
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      Description= 
      (SELECT Description
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      DocumentNote= 
      (SELECT DocumentNote
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      Help= 
      (SELECT Help
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      UPC= 
      (SELECT UPC
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      SKU= 
      (SELECT SKU
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      C_UOM_ID= 
      (SELECT C_UOM_ID
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      M_Product_Category_ID= 
      (SELECT M_Product_Category_ID
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      Classification= 
      (SELECT Classification
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      ProductType= 
      (SELECT ProductType
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      Volume= 
      (SELECT Volume
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      Weight= 
      (SELECT Weight
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      ShelfWidth= 
      (SELECT ShelfWidth
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      ShelfHeight= 
      (SELECT ShelfHeight
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      ShelfDepth= 
      (SELECT ShelfDepth
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      UnitsPerPallet= 
      (SELECT UnitsPerPallet
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      Discontinued= 
      (SELECT Discontinued
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      DiscontinuedBy= 
      (SELECT DiscontinuedBy
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) ,
      Updated=  now() ,
      UpdatedBy= 
      (SELECT UpdatedBy
      FROM I_Product WHERE I_Product_ID = TO_NUMBER(?)) 
      WHERE M_Product_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="MProductID"/>
  </SqlMethod>
  <SqlMethod name="updateProductPOImport" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE M_Product_PO 
      SET IsCurrentVendor= 'Y',
      C_UOM_ID= 
      (SELECT C_UOM_ID
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      C_Currency_ID= 
      (SELECT C_Currency_ID
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      UPC= 
      (SELECT UPC
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      PriceList= 
      (SELECT PriceList
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      PricePO= 
      (SELECT PricePO
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      RoyaltyAmt= 
      (SELECT RoyaltyAmt
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      PriceEffective= 
      (SELECT PriceEffective
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      VendorProductNo= 
      (SELECT VendorProductNo
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      VendorCategory= 
      (SELECT VendorCategory
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      Manufacturer= 
      (SELECT Manufacturer
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      Discontinued= 
      (SELECT Discontinued
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      DiscontinuedBy= 
      (SELECT DiscontinuedBy
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      Order_Min= 
      (SELECT Order_Min
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      Order_Pack= 
      (SELECT Order_Pack
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      CostPerOrder= 
      (SELECT CostPerOrder
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      DeliveryTime_Promised= 
      (SELECT DeliveryTime_Promised
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) ,
      Updated=now(),
      UpdatedBy= 
      (SELECT UpdatedBy
      FROM I_Product
      WHERE I_Product_ID = TO_NUMBER(?)) 
      WHERE M_Product_ID = TO_NUMBER(?) AND C_BPartner_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="IProductID"/>
    <Parameter name="MProductID"/>
    <Parameter name="CBPartnerID"/>
  </SqlMethod>
  <SqlMethod name="insertProductPOImport" type="preparedStatement" connection="true" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      INSERT INTO M_Product_PO (M_Product_ID,C_BPartner_ID, 
      AD_Client_ID,AD_Org_ID,IsActive,Created,CreatedBy,Updated,UpdatedBy,
      IsCurrentVendor,C_UOM_ID,C_Currency_ID,UPC,
      PriceList, PricePO,RoyaltyAmt,PriceEffective,
      VendorProductNo,VendorCategory,Manufacturer,
      Discontinued,DiscontinuedBy,Order_Min,Order_Pack,
      CostPerOrder,DeliveryTime_Promised) 
      SELECT TO_NUMBER(?),TO_NUMBER(?), 
      AD_Client_ID,AD_Org_ID,'Y',now(),CreatedBy,now(),UpdatedBy,
      'Y',C_UOM_ID,C_Currency_ID,UPC,
      PriceList,PricePO,RoyaltyAmt,PriceEffective,
      VendorProductNo,VendorCategory,Manufacturer,
      Discontinued,DiscontinuedBy,Order_Min,Order_Pack,
      CostPerOrder,DeliveryTime_Promised 
      FROM I_Product 
      WHERE I_Product_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="MProductID"/>
    <Parameter name="CBPartnerID"/>
    <Parameter name="IProductID"/>
  </SqlMethod>
  <SqlMethod name="updateProductSetImportY" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product SET I_IsImported='Y', M_Product_ID=TO_NUMBER(?), 
      Updated=now(), Processed='Y' WHERE I_Product_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="MProductID"/>
    <Parameter name="IProductID"/>
  </SqlMethod>
  <SqlMethod name="insertProductError" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'') || 'Insert Product: ' || ?
      WHERE I_Product_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="error"/>
    <Parameter name="IProductID"/>
  </SqlMethod>
  <SqlMethod name="updateProductError" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'Update Product: ' || ?
      WHERE I_Product_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="error"/>
    <Parameter name="IProductID"/>
  </SqlMethod>
  <SqlMethod name="updateProductPOError" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'Update Product_PO: ' || ?
      WHERE I_Product_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="error"/>
    <Parameter name="IProductID"/>
  </SqlMethod>
  <SqlMethod name="insertProductPOError" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product  
      SET I_IsImported='E', I_ErrorMsg=COALESCE(TO_CHAR(I_ErrorMsg),'')||'Insert Product_PO: ' || ?
      WHERE I_Product_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="error"/>
    <Parameter name="IProductID"/>
  </SqlMethod>
  <SqlMethod name="updateNotImported" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      UPDATE I_Product 
      SET I_IsImported='N', Updated=now()
      WHERE I_IsImported<>'Y'
      AND AD_CLIENT_ID = TO_NUMBER(?)
      ]]>
    </Sql>
    <Parameter name="client"/>
  </SqlMethod>
  <SqlMethod name="selectClient" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      SELECT AD_CLIENT_ID AS ID, NAME FROM AD_CLIENT
      ]]>
    </Sql>
  </SqlMethod>
</SqlClass>
